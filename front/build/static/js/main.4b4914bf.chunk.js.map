{"version":3,"sources":["assets/unirse.png","assets/crear.png","assets/logo.png","assets/logo2.png","components/NavBar/NavBar.js","components/Login/Login.js","components/Register/Register.js","Home.js","components/PpalLog/PpalLog.js","components/Map/MapContainer.js","components/crearRuta/CrearRuta.js","components/MisCarros/AñadirCarro.js","components/MisCarros/MisCarros.js","components/RutasDisponibles/RutasDisponibles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","history","useHistory","irHome","e","preventDefault","push","cookies","wheelsUser","wheelsToken","className","onClick","alt","id","src","logo","onSubmit","temp","JSON","parse","wsConnection","send","uid","signout","type","Login","useState","correo","setCorreo","pw","setPw","error","setError","a","async","data","password","fetch","method","body","stringify","headers","req","json","rta","funcionCookie","token","wsConn","htmlFor","required","onChange","target","value","placeholder","Register","pwConfirm","setPwConfirm","error2","setError2","registrar","evt","Home","href","PpalLog","pregDestino","setPregDestino","destino","setDestino","origen","setOrigen","maxInicio","setMaxInicio","maxDestino","setMaxDestino","lista","setLista","listaMisWheels","setListaMisWheels","backUrl","confirmarServicio","user","get","console","log","tempO","resultadoInicio","results","geometry","location","tempD","resultadoFin","consultarServicios","lat","lng","latOrigen","lonOrigen","latDestino","lonDestino","maxDistInicio","maxDistFinal","bodyService","unirseRuta","bodyParam","allCookies","crear","length","map","element","servicio","_id","key","style","marginBottom","newBody","destination","reservar","dueño","duracionAprox","unirse","mapStyles","width","height","require","config","MapContainer","state","activeMarker","selectedPlace","onMarkerClick","marker","setState","google","this","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","process","REACT_APP_GOOGLE_MAPS_API_KEY","CrearRuta","today","Date","anho","getFullYear","mes","getMonth","padStart","dia","getDate","getHours","getMinutes","hora","setHora","setLatOrigen","setLonOrigen","setLatDestino","setLonDestino","confirmacion","setConfirmacion","confirmacion1","setConfirmacion1","confirmacion2","setConfirmacion2","fecha","setFecha","seleccionado","setSeleccionado","cupos","setCupos","cupoExtra","setCupoExtra","consultarCarros","repetirProceso","alert","crearServicio","fechita","timestamp","Math","floor","getTime","msg","name","min","max","carros","marca","linea","placas","AñadirCarro","setMarca","setLinea","setPlacas","color","setColor","crearCarro","pattern","MisCarros","agregar","setAgregar","RutasDisponibles","withCookies","setConnection","setCarros","setServicios","cookie","set","path","connection","WebSocket","onopen","onmessage","includes","split","jsonData","onclose","setTimeout","userId","render","component","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6DCA3CD,EAAOC,QAAU,IAA0B,mC,+UC6E5BC,MAvEf,SAAgBC,GAGd,IAAIC,EAAUC,cAad,SAASC,EAAOC,GACdA,EAAEC,iBACFJ,EAAQK,KAAK,KA2Bf,OACGN,EAAMO,QAAQA,QAAQC,YAAeR,EAAMO,QAAQA,QAAQE,YAY1D,yBAAKC,UAAU,qCACb,uBAAGC,QAtCT,SAAgBP,GACdA,EAAEC,iBACFJ,EAAQK,KAAK,aAoCWI,UAAU,gBAE5B,yBAAKE,IAAI,OAAOC,GAAG,aAAaC,IAAKC,OAEvC,0BAAML,UAAU,cAAcM,SArCpC,SAAsBZ,GACpBA,EAAEC,iBACF,IAAMY,EAAOC,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YAC1CR,EAAMoB,cACRpB,EAAMoB,aAAaC,KAAK,OAASJ,EAAKK,KACtCtB,EAAMuB,QAAQnB,GACdD,EAAOC,KAGPJ,EAAMuB,QAAQnB,GACdD,EAAOC,MA4BH,4BAAQO,QAxBhB,SAAmBP,GACjBA,EAAEC,iBACFJ,EAAQK,KAAK,eAsBqBI,UAAU,2BAAtC,cACA,4BAAQc,KAAK,SAASd,UAAU,2BAAhC,sBAlBJ,yBAAKA,UAAU,qCACb,uBAAGC,QAASR,EAAQO,UAAU,gBAE5B,yBAAKE,IAAI,OAAOC,GAAG,aAAaC,IAAKC,OAEvC,0BAAML,UAAU,eACd,4BAAQC,QAhDhB,SAAoBP,GAClBA,EAAEC,iBACFJ,EAAQK,KAAK,cA8CsBI,UAAU,2BAAvC,iBACA,4BAAQC,QA3ChB,SAAkBP,GAChBA,EAAEC,iBACFJ,EAAQK,KAAK,WAyCoBI,UAAU,2BAArC,uB,MC2BKe,MAlFf,SAAezB,GAEb,IAAIC,EAAUC,cAFM,EAKQwB,mBAAS,IALjB,mBAKbC,EALa,KAKLC,EALK,OAMAF,mBAAS,IANT,mBAMbG,EANa,KAMTC,EANS,OAOMJ,oBAAS,GAPf,mBAObK,EAPa,KAONC,EAPM,KAgDpB,OACI,yBAAKtB,UAAU,OACb,yBAAKA,UAAU,qBACb,gDACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,OAAOM,SAxCf,SAACZ,IACrB,WAAC,YAAA6B,EAAAC,OAAA,uDACC9B,EAAEC,iBACI8B,EAAO,CACXb,IAAKK,EACLS,SAAUP,GAJb,WAAAI,EAAA,MAMmBI,MAAM,GAAD,OApBX,wBAoBW,gBAA2B,CAChDC,OAAQ,OACRC,KAAMrB,KAAKsB,UAAUL,GACrBM,QAAS,CAAE,eAAgB,uBAT9B,cAMOC,EANP,kBAAAT,EAAA,MAWmBS,EAAIC,QAXvB,OAWOC,EAXP,OAYC5C,EAAM6C,cAAcD,EAAIE,MAAOnB,GACQ,KAApC3B,EAAMO,QAAQA,QAAQE,aAAwD,cAApCT,EAAMO,QAAQA,QAAQE,aACjEuB,GAAS,GACNhC,EAAMuB,SACTvB,EAAMuB,QAAQnB,KAGdH,EAAQK,KAAK,YACbN,EAAM+C,UApBT,sCAAD,KAwCc,yBAAKrC,UAAU,cACb,2BAAOsC,QAAQ,QAAf,WACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,OAAOqC,SAAU,SAAA9C,GAAC,OAAIwB,EAAUxB,EAAE+C,OAAOC,QAAQC,YAAY,wBAEvH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,MAAf,iBACA,2BAAOC,UAAQ,EAACzB,KAAK,WAAWd,UAAU,eAAeG,GAAG,KAAKqC,SAAU,SAAA9C,GAAC,OAAI0B,EAAM1B,EAAE+C,OAAOC,QAAQC,YAAY,mBAEpHtB,EACD,yBAAKrB,UAAU,eAAf,sCAEA,8BAEA,4BAAQc,KAAK,SAASd,UAAU,oBAAhC,sBAGJ,yBAAKA,UAAU,oC,uBC6Bd4C,MAtGf,SAAkBtD,GAGhB,IAAIC,EAAUC,cAHS,EAQKwB,mBAAS,IARd,mBAQhBC,EARgB,KAQRC,EARQ,OASHF,mBAAS,IATN,mBAShBG,EATgB,KASZC,EATY,OAUWJ,mBAAS,IAVpB,mBAUhB6B,EAVgB,KAULC,EAVK,OAWG9B,oBAAS,GAXZ,mBAWhBK,EAXgB,KAWTC,EAXS,OAYKN,oBAAS,GAZd,mBAYhB+B,EAZgB,KAYRC,EAZQ,KAyBnBC,EAAY,SAACvD,IACjB,WAAC,YAAA6B,EAAAC,OAAA,uDACC9B,EAAEC,iBACF2B,GAAS,GACT0B,GAAU,GACJvB,EAAO,CACXb,IAAKK,EACLS,SAAUP,GANb,WAAAI,EAAA,MAQmBI,MAAM,GAAD,OA9BT,wBA8BS,gBAA2B,CAChDC,OAAQ,OACRC,KAAMrB,KAAKsB,UAAUL,GACrBM,QAAS,CAAE,eAAgB,uBAX9B,cAQOC,EARP,kBAAAT,EAAA,MAamBS,EAAIC,QAbvB,OAaOC,EAbP,OAcC5C,EAAM6C,cAAcD,EAAIE,MAAOnB,GACQ,KAApC3B,EAAMO,QAAQA,QAAQE,aAAwD,cAApCT,EAAMO,QAAQA,QAAQE,aACjEiD,GAAU,GACZ1D,EAAMuB,QAAQnB,KAGZH,EAAQK,KAAK,YACbN,EAAM+C,UArBT,sCAAD,IA+BA,OACF,yBAAKrC,UAAU,OACL,yBAAKA,UAAU,qBACb,wCACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,OAAOM,SAlDlB,SAAC4C,GACpBA,EAAIvD,iBACDwB,GAAI0B,EACLvB,GAAS,GAGT2B,EAAUC,KA6CE,yBAAKlD,UAAU,cACb,2BAAOsC,QAAQ,QAAf,WACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,OAAOqC,SAAU,SAAA9C,GAAC,OAAIwB,EAAUxB,EAAE+C,OAAOC,QAAOC,YAAY,wBAEtH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,MAAf,iBACA,2BAAOC,UAAQ,EAACzB,KAAK,WAAWd,UAAU,eAAeG,GAAG,KAAKqC,SAAU,SAAA9C,GAAC,OAAI0B,EAAM1B,EAAE+C,OAAOC,QAAQC,YAAY,mBAErH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,cAAf,gCACA,2BAAOC,UAAQ,EAACzB,KAAK,WAAWd,UAAU,eAAeG,GAAG,aAAaqC,SAAU,SAAA9C,GAAC,OAAIoD,EAAapD,EAAE+C,OAAOC,QAAQC,YAAY,+BAGlII,EACA,yBAAK/C,UAAU,eAAf,0BAEA,8BAEDqB,EACD,yBAAKrB,UAAU,eAAf,8CAEA,8BAGA,4BAAQc,KAAK,SAASd,UAAU,oBAAhC,mBAGF,yBAAKA,UAAU,oCChEhBmD,MArBf,WAGE,OACI,yBAAKnD,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,+CACA,yBAAKE,IAAI,OAAOC,GAAG,OAAOC,IAAKC,MAC/B,yBAAKL,UAAU,WACb,2BAAG,+EAAiD,6BAAjD,2CAEL,yBAAKA,UAAU,WACb,kCAAI,uBAAGoD,KAAK,aAAR,iBAAJ,wD,iDC6LCC,MA/Mf,SAAiB/D,GAAQ,IAAD,EAEgB0B,oBAAS,GAFzB,mBAEfsC,EAFe,KAEFC,EAFE,OAGQvC,mBAAS,IAHjB,mBAGfwC,EAHe,KAGNC,EAHM,OAIMzC,mBAAS,IAJf,mBAIf0C,EAJe,KAIPC,EAJO,OAKY3C,mBAAS,IALrB,mBAKf4C,EALe,KAKJC,EALI,OAMc7C,mBAAS,IANvB,mBAMf8C,EANe,KAMHC,EANG,OAOI/C,mBAAS,IAPb,mBAOfgD,EAPe,KAORC,EAPQ,OAQsBjD,mBAAS,IAR/B,mBAQfkD,EARe,KAQCC,EARD,KAWhBC,EAAU,wBAEZ7E,EAAUC,cAYR6E,EAAoB,YACxB,WAAC,kBAAA9C,EAAAC,OAAA,uDACO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cACzB1C,EAAOrB,KAAKsB,UAAU,CAC1B,gBAAmB4B,EACnB,aAAgBF,IAJnB,WAAAjC,EAAA,MAMmBI,MAAM,GAAD,OAAIyC,EAAJ,2BAAsC,CAC3DxC,OAAQ,OACRC,KAAMA,EACNE,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBAZrB,cAMOtC,EANP,kBAAAT,EAAA,MAemBS,EAAIC,QAfvB,OAeOC,EAfP,OAgBCsC,QAAQC,IAAIvC,GAENwC,EAAQxC,EAAIyC,gBAAgBC,QAAQ,GAAGC,SAASC,SAChDC,EAAQ7C,EAAI8C,aAAaJ,QAAQ,GAAGC,SAASC,SACnDG,EAAmBP,EAAMQ,IAAKR,EAAMS,IAAKJ,EAAMG,IAAKH,EAAMI,KAAOvB,GAAcE,GApBhF,sCAAD,IAyBImB,EAAqB,SAACG,EAAWC,EAAWC,EAAYC,EAAYC,EAAeC,IACvF,WAAC,cAAAlE,EAAAC,OAAA,uDACO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cACzBmB,EAAclF,KAAKsB,UAAU,CACjC,IAAO,CACL,IAAMwD,EACN,IAAMC,GAER,OAAU,CACR,IAAMH,EACN,IAAMC,GAER,cAAgBG,EAChB,aAAeC,IAZlB,WAAAlE,EAAA,MAcmBI,MAAM,GAAD,OAAIyC,EAAJ,4BAAuC,CAC5DxC,OAAQ,OACRC,KAAM6D,EACN3D,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBApBrB,cAcOtC,EAdP,kBAAAT,EAAA,MAuBmBS,EAAIC,QAvBvB,OAuBOC,EAvBP,OAwBC+B,EAAS/B,GAxBV,qCAAD,IAqDIyD,EAAa,SAACC,IAClB,WAAC,cAAArE,EAAAC,OAAA,uDAEO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cACzBmB,EAAclF,KAAKsB,UAAU8D,GAHpC,WAAArE,EAAA,MAImBI,MAAM,GAAD,OAAIyC,EAAJ,4BAAuC,CAC5DxC,OAAQ,OACRC,KAAM6D,EACN3D,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBAVrB,cAIOtC,EAJP,kBAAAT,EAAA,MAamBS,EAAIC,QAbvB,OAaOC,EAbP,OAcCsC,QAAQC,IAAIvC,GAdb,qCAAD,IAmCF,OA3DE,WAAE,YAAAX,EAAAC,OAAA,uDACI8C,EAAO9D,KAAKsB,UAAUxC,EAAMO,QAAQ0E,IAAI,eAC9CC,QAAQC,IAAI,qBAFV,WAAAlD,EAAA,MAGgBI,MAAM,GAAD,OAAIyC,EAAJ,0BAAqC,CAC1DxC,OAAQ,OACRG,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBARlB,cAGItC,EAHJ,OAWFwC,QAAQC,IAAI,UAXV,WAAAlD,EAAA,MAYgBS,EAAIC,QAZpB,OAYIC,EAZJ,OAaFsC,QAAQC,IAAIvC,GACZiC,EAAkBjC,GAdhB,sCAAF,GAgBFsC,QAAQC,IAAIP,GAyCdM,QAAQC,IAAIP,GAGR5E,EAAMO,QAAQA,QAAQE,YACpB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qBACb,0CAAgBV,EAAMuG,WAAW/F,WAAWc,IAA5C,KACA,yBAAKZ,UAAU,eACb,yBAAKA,UAAU,OACb,4BAAQC,QAtIpB,WACEV,EAAQK,KAAK,eAqIyBI,UAAU,oBAAtC,wBACA,yBAAKA,UAAU,SAASI,IAAK0F,OAE/B,yBAAK9F,UAAU,OAEXsD,GAA8B,IAAfU,EAAM+B,OACjB,0BAAM/F,UAAU,OAAOM,SAxIzC,SAAsBZ,GAEpBA,EAAEC,iBACF0E,MAsIkB,yBAAKrE,UAAU,cACb,2BAAOsC,QAAQ,UAAf,0BACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,SAASqC,SAAU,SAAA9C,GAAC,OAAIiE,EAAUjE,EAAE+C,OAAOC,QAAQC,YAAY,uBAEzH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,WAAf,8BACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,UAAUqC,SAAU,SAAA9C,GAAC,OAAI+D,EAAW/D,EAAE+C,OAAOC,QAAQC,YAAY,wBAE3H,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,cAAf,0CACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,aAAaqC,SAAU,SAAA9C,GAAC,OAAImE,EAAanE,EAAE+C,OAAOC,QAAQC,YAAY,6CAEhI,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,eAAf,2CACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,cAAcqC,SAAU,SAAA9C,GAAC,OAAIqE,EAAcrE,EAAE+C,OAAOC,QAAQC,YAAY,8CAElI,4BAAQ7B,KAAK,SAASd,UAAU,oBAAhC,WAGFsD,GAAeU,EAAM+B,QAAQ,EACjC,6BACA,iDACC/B,EACAgC,KAAI,SAACC,GAGI,OADAzB,QAAQC,IAAIwB,EAASA,EAAQC,SAASC,KAC/B,yBAAKC,IAAKH,EAAQC,SAASC,IAAKE,MAAO,CAACC,aAAc,WAC3D,4BAAQrG,QAAS,kBAtD3C,SAAkB2F,GAChB,IAAMW,EACJ,CACE,IAAMjH,EAAMuG,WAAW/F,WAAWc,IAClC,UAAcgF,EAAUO,IACxB,QAAYP,EAAUY,aAExBb,EAAWY,GA+CkCE,CAASR,EAAQC,WAAWlG,UAAU,cAA7D,YADK,eACmGiG,EAAQC,SAASQ,WADpH,uCAC4JT,EAAQC,SAASS,mBAO9L,6BACE,4BAAQ1G,QAzFxB,WACEsD,GAAe,IAwFkCvD,UAAU,oBAA7C,2BACA,yBAAKA,UAAU,SAASI,IAAKwG,SAKrC,yBAAK5G,UAAU,eACX,6CAMR,yBAAKA,UAAU,eAAc,+CAAiB,uBAAGoD,KAAK,KAAR,2BAAjB,KAAuD,6BAAvD,wE,wDChN7ByD,EAAY,CAChBC,MAAO,OACPC,OAAQ,SAEKC,EAAQ,IAChBC,SAEA,IAAMC,EAAb,YACE,WAAY5H,GAAQ,IAAD,8BACjB,4CAAMA,KAGR6H,MAAQ,CACNC,aAAc,GACdC,cAAe,IANE,EASnBC,cAAgB,SAAChI,EAAOiI,EAAQ7H,GAAhB,OACd,EAAK8H,SAAS,CACZH,cAAe/H,EACf8H,aAAcG,KAZC,EADrB,sEAiBI,OACE,kBAAC,MAAD,CACEE,OAAQC,KAAKpI,MAAMmI,OACnBE,KAAM,GACNtB,MAAOQ,EACPe,cAAe,CACd1C,IAAKwC,KAAKpI,MAAM4F,IAChBC,IAAKuC,KAAKpI,MAAM6F,MAGjB,kBAAC,SAAD,CACElF,QAASyH,KAAKJ,qBA5BxB,GAAkCO,aAmCnBC,6BAAiB,CAC9BC,OAAQC,8CAAYC,+BADPH,CAEZZ,G,MCwOYgB,MA9Qf,SAAmB5I,GAGjB,IAAI6I,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cACbC,EAAM,UAAGJ,EAAMK,WAAa,GAAIC,SAAS,EAAG,GAC5CC,EAAM,UAAGP,EAAMQ,WAAYF,SAAS,EAAG,GANnB,GAOZ,UAAGN,EAAMS,YAAaH,SAAS,EAAG,GAChC,UAAGN,EAAMU,cAAeJ,SAAS,EAAG,GAEtBzH,mBAAS,KAVb,mBAUjB0C,EAViB,KAUTC,EAVS,OAWM3C,mBAAS,IAXf,mBAWjBwC,EAXiB,KAWRC,EAXQ,OAYAzC,mBAAS,IAZT,mBAYjB8H,EAZiB,KAYXC,EAZW,OAaU/H,mBAAS,GAbnB,mBAajBoE,EAbiB,KAaN4D,EAbM,OAcUhI,mBAAS,GAdnB,mBAcjBqE,EAdiB,KAcN4D,EAdM,OAeYjI,mBAAS,GAfrB,mBAejBsE,EAfiB,KAeL4D,EAfK,OAgBYlI,mBAAS,GAhBrB,mBAgBjBuE,EAhBiB,KAgBL4D,EAhBK,OAiBgBnI,oBAAS,GAjBzB,mBAiBjBoI,EAjBiB,KAiBHC,EAjBG,OAkBkBrI,oBAAS,GAlB3B,mBAkBjBsI,EAlBiB,KAkBFC,EAlBE,OAmBkBvI,oBAAS,GAnB3B,mBAmBjBwI,EAnBiB,KAmBFC,EAnBE,OAoBEzI,mBAAS,IApBX,mBAoBjB0I,GApBiB,KAoBVC,GApBU,QAqBgB3I,oBAAS,GArBzB,qBAqBjB4I,GArBiB,MAqBHC,GArBG,SAsBE7I,mBAAS,GAtBX,qBAsBjB8I,GAtBiB,MAsBVC,GAtBU,SAuBU/I,mBAAS,GAvBnB,qBAuBjBgJ,GAvBiB,MAuBNC,GAvBM,MA4BpB1K,IAHWD,EAAM4K,gBAAgB1J,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YAAaR,EAAMO,QAAQA,QAAQE,aAG3FP,eAUd,SAAS2K,KACPC,MAAM,+DAVOpD,EAAQ,IAChBC,SAWP,IAAM7C,GAAU,wBAgCViG,GAAgB,YACpB,WAAC,kBAAA9I,EAAAC,OAAA,uDACO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cAEzB+F,EAAU,IAAIlC,KADDsB,GAAQ,IAAMZ,EAAO,OAElCyB,EAAYC,KAAKC,MAAMH,EAAQI,UAAY,KAC3ChF,EAAclF,KAAKsB,UAAU,CACjC,WAASwC,EAAK1D,IACd,eAAkBkJ,GAClB,SAAY,GACZ,KAAQ,GACR,cAAgB,GAChB,cAAgB,GAChB,UAAY,GACZ,UAAY,GACZ,QAAW,CACT,IAAO1E,EACP,IAAOC,GAET,YAAe,CACb,IAAOC,EACP,IAAOC,GAET,WAAa,EACb,WAAa,EACb,cAAiBgF,IAxBpB,WAAAhJ,EAAA,MA0BmBI,MAAM,GAAD,OAAIyC,GAAJ,2BAAsC,CAC3DxC,OAAQ,OACRC,KAAM6D,EACN3D,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBAhCrB,cA0BOtC,EA1BP,mBAAAT,EAAA,MAmCmBS,EAAIC,QAnCvB,QAmCOC,EAnCP,OAoCCsC,QAAQC,IAAIvC,GACI,OAAZA,EAAIyI,MACNP,MAAM,uCACN7K,GAAQK,KAAK,YAvChB,sCAAD,IAsDIyE,GAAoB,YACxB,WAAC,kBAAA9C,EAAAC,OAAA,uDACO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cACzB1C,EAAOrB,KAAKsB,UAAU,CAC1B,gBAAmB4B,EACnB,aAAgBF,IAJnB,WAAAjC,EAAA,MAMmBI,MAAM,GAAD,OAAIyC,GAAJ,2BAAsC,CAC3DxC,OAAQ,OACRC,KAAMA,EACNE,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBAZrB,cAMOtC,EANP,kBAAAT,EAAA,MAemBS,EAAIC,QAfvB,OAeOC,EAfP,OAgBCsC,QAAQC,IAAIvC,GAENwC,EAAQxC,EAAIyC,gBAAgBC,QAAQ,GAAGC,SAASC,SAChDC,EAAQ7C,EAAI8C,aAAaJ,QAAQ,GAAGC,SAASC,SAEnDN,QAAQC,IAAIC,EAAOK,GACnBiE,EAAatE,EAAMQ,KACnB+D,EAAavE,EAAMS,KAEnB+D,EAAcnE,EAAMG,KACpBiE,EAAcpE,EAAMI,KACpBX,QAAQC,IAAI,SAAUW,EAAWC,GACjCb,QAAQC,IAAI,UAAWa,EAAYC,GAEnC8D,GAAgB,GA9BjB,sCAAD,IA0DF,OACE/J,EAAMO,QAAQA,QAAQE,YACpB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qBACb,oDAA0BV,EAAMuG,WAAW/F,WAAWc,IAAtD,KACA,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,eAAeM,SAnK3C,SAAsBZ,GACpBA,EAAEC,iBACFkK,IAAgB,KAmKJ,yBAAK7J,UAAU,cACb,2BAAOsC,QAAQ,UAAf,qBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,SAASqC,SAAU,SAAA9C,GAAC,OAAIiE,EAAUjE,EAAE+C,OAAOC,QAAQC,YAAY,kCAEzH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,WAAf,sBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,UAAUqC,SAAU,SAAA9C,GAAC,OAAI+D,EAAW/D,EAAE+C,OAAOC,QAAQC,YAAY,mCAE3H,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,SAAf,mBACA,2BAAOxB,KAAK,OAAOd,UAAU,eAAeG,GAAG,QAAQyK,KAAK,aAAaC,IAAKxC,EAAO,IAAME,EAAM,IAAMG,EAAKoC,IAAI,aAAatI,SAAU,SAAA9C,GAAC,OAAIiK,GAASjK,EAAE+C,OAAOC,UAC9J,2BAAOJ,QAAQ,QAAf,kBACA,2BAAOtC,UAAU,eAAec,KAAK,OAAOX,GAAG,OAAOyK,KAAK,OAAOpI,SAAU,SAAA9C,GAAC,OAAIqJ,EAAQrJ,EAAE+C,OAAOC,QAAQH,UAAQ,KAEpH,yBAAKvC,UAAU,cACb,2BAAOsC,QAAQ,SAAf,+BACA,4BAAQC,UAAQ,EAACvC,UAAU,eAAeG,GAAG,QAAQwC,YAAY,iBAAiBH,SAAU,SAAA9C,GAAC,OAAIuK,GAAavK,EAAE+C,OAAOC,SACrH,2DACCpD,EAAMyL,QAAUzL,EAAMyL,OAAOhF,OAAS,EACrCzG,EAAMyL,OACH/E,KAAI,SAACC,GACJ,OAAO,4BAAQvD,MAAOuD,EAAQ6D,OAC3B7D,EAAQ+E,MADJ,IACY/E,EAAQgF,MADpB,cACsChF,EAAQiF,OAD9C,iBACoEjF,EAAQ6D,MAD5E,QAKX,gCAMN,4BAAQ7J,QA5GR,WACZoJ,GAAgB,GAChB7E,QAAQC,IAAIf,EAAQF,EAASsF,GAC7BzE,MAyGoCrE,UAAU,oBAAlC,qBACC4J,GAAe,6BAAK,2BAAOrH,UAAQ,EAACzB,KAAK,SAAS+J,IAAI,IAAIC,IAAK,GAAKd,GAAWhK,UAAU,eAAeG,GAAG,QAAQqC,SAAU,SAAA9C,GAAC,OAAIqK,GAASrK,EAAE+C,OAAOC,QAAQC,YAAY,0CAAzJ,IAAoM,4BAAQ7B,KAAK,SAASd,UAAU,oBAAhC,eAA+E,+BAEpSoJ,EACC,yBAAKpJ,UAAU,oBACb,yBAAKA,UAAU,gBAAf,sBACkB,qCADlB,IAEE,6BACA,4BAAQC,QA5L1B,WACEsJ,GAAiB,GACjB/E,QAAQC,IAAI6E,GACZ9E,QAAQC,IAAI+E,GACRF,GAAiBE,EACnBa,KAGAD,MAAM,qCAoLsCpK,UAAU,cAAxC,SACA,4BAAQC,QAASkK,GAAgBnK,UAAU,cAA3C,MAEA,kBAAC,EAAD,CACEkF,IAAKE,EACLD,IAAKE,KAKT,yBAAKrF,UAAU,iBAAf,sBACkB,sCADlB,IAEE,6BACA,4BAAQC,QA7L1B,WACEwJ,GAAiB,GACjBjF,QAAQC,IAAI6E,GACZ9E,QAAQC,IAAI+E,GACRF,GAAiBE,EACnBa,KAGAD,MAAM,qCAqLsCpK,UAAU,cAAxC,SACA,4BAAQC,QAASkK,GAAgBnK,UAAU,cAA3C,MACA,kBAAC,EAAD,CACEkF,IAAKI,EACLH,IAAKI,MAMX,+BAEJ,yBAAKvF,UAAU,gCAxEnB,aA4EF,yBAAKA,UAAU,eAAc,+CAAiB,uBAAGoD,KAAK,KAAR,2BAAjB,KAAuD,6BAAvD,wE,cC/LpB+H,MA7Ef,SAAqB7L,GAELE,cAAd,IAF0B,EAGAwB,mBAAS,IAHT,mBAGnBgK,EAHmB,KAGZI,EAHY,OAIApK,mBAAS,IAJT,mBAInBiK,EAJmB,KAIZI,EAJY,OAKErK,mBAAS,IALX,mBAKnBkK,EALmB,KAKXI,EALW,OAMAtK,mBAAS,IANT,mBAMnBuK,EANmB,KAMZC,EANY,OAOAxK,mBAAS,GAPT,mBAOnB8I,EAPmB,KAOZC,EAPY,KAWpBlI,EAAO,CACX,IAFiBrB,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YAAYc,IAG9D,MAAS,CAAC,MAASoK,EACjB,MAASC,EACT,OAAUC,EACV,MAASK,EACT,MAASzB,IAKP2B,EAAa,YACjB,WAAC,UAAAlK,EAAAC,OAAA,uDACO8C,EAAOhF,EAAMO,QAAQ0E,IAAI,cADhC,WAAAhD,EAAA,MAEmBI,MAAM,GAAD,OAhBX,wBAgBW,sBAAiC,CACtDC,OAAO,OACPC,KAAMrB,KAAKsB,UAAUD,GACrBE,QAAS,CACP,cAAgB,UAAhB,OAA2BzC,EAAMO,QAAQ0E,IAAI,gBAC7C,KAAQ/D,KAAKsB,UAAUwC,GACvB,eAAgB,uBARrB,cAEOtC,EAFP,kBAAAT,EAAA,MAWmBS,EAAIC,QAXvB,mDAAD,IAuBF,OACE3C,EAAMO,QAAQA,QAAQE,YACtB,0BAAMC,UAAU,QAAQM,SAR1B,SAAsBZ,GACpBA,EAAEC,iBACF8L,MAOE,sDACA,yBAAKzL,UAAU,cACb,2BAAOsC,QAAQ,SAAf,qBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,QAAQqC,SAAU,SAAA9C,GAAC,OAAI0L,EAAS1L,EAAE+C,OAAOC,QAAQC,YAAY,gCAEvH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,SAAf,qBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,QAAQqC,SAAU,SAAA9C,GAAC,OAAI2L,EAAS3L,EAAE+C,OAAOC,QAAQC,YAAY,uCAEvH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,UAAf,sBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAO4K,QAAQ,sBAAsB1L,UAAU,eAAeG,GAAG,SAASqC,SAAU,SAAA9C,GAAC,OAAI4L,EAAU5L,EAAE+C,OAAOC,QAAQC,YAAY,oCAEvJ,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,SAAf,qBACA,2BAAOC,UAAQ,EAACzB,KAAK,OAAOd,UAAU,eAAeG,GAAG,QAAQqC,SAAU,SAAA9C,GAAC,OAAI8L,EAAS9L,EAAE+C,OAAOC,QAAQC,YAAY,sBAEvH,yBAAK3C,UAAU,cACb,2BAAOsC,QAAQ,SAAf,SACA,2BAAOC,UAAQ,EAACzB,KAAK,SAAS+J,IAAI,IAAIC,IAAI,IAAI9K,UAAU,eAAeG,GAAG,QAAQqC,SAAU,SAAA9C,GAAC,OAAIqK,EAASrK,EAAE+C,OAAOC,QAAQC,YAAY,mCAEzI,4BAAQ7B,KAAK,SAASd,UAAU,oBAAhC,kBAGF,yBAAKA,UAAU,eAAc,+CAAiB,uBAAGoD,KAAK,KAAR,2BAAjB,KAAuD,6BAAvD,wECtBlBuI,MAnDf,SAAmBrM,GAAQ,IAAD,EAEM0B,oBAAS,GAFf,mBAEjB4K,EAFiB,KAERC,EAFQ,KAUxB,OAHevM,EAAM4K,gBAAgB1J,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YAAaR,EAAMO,QAAQA,QAAQE,aAIvGT,EAAMO,QAAQA,QAAQE,YACpB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACb,2CAAiBV,EAAMuG,WAAW/F,WAAWc,IAA7C,KACCtB,EAAMyL,OAAOhF,OAAS,EACrBzG,EAAMyL,OAAO/E,KAAI,SAACC,GAChB,OAAO,uBAAGG,IAAKH,EAAQiF,QACpBjF,EAAQ+E,MADJ,IACY/E,EAAQgF,MADpB,cACqC,gCAAShF,EAAQiF,YAI/D,0DAEJ,yBAAKlL,UAAU,uBACf,yBAAKA,UAAU,gCACZ4L,EACC,kBAAC,EAAgBtM,GAEjB,yBAAKU,UAAU,OACb,6BACE,4BAAQC,QA7B1B,WACE4L,GAAW,IA4BoC7L,UAAU,oBAAzC,kBAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,WAAWI,IAAKwG,YAW7C,yBAAK5G,UAAU,eAAc,+CAAiB,uBAAGoD,KAAK,KAAR,2BAAjB,KAAuD,6BAAvD,wE,MCxBpB0I,MAxBf,SAA0BxM,GAGxB,OACEA,EAAMO,QAAQA,QAAQE,YACpB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qBACb,6DAAgCV,EAAMuG,WAAW/F,WAAWc,IAA5D,KACA,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,sCACb,sCACA,sCACA,sCACA,uCAEF,yBAAKA,UAAU,gCAVnB,aAcF,yBAAKA,UAAU,eAAc,+CAAiB,uBAAGoD,KAAK,KAAR,2BAAjB,KAAuD,6BAAvD,wECoFpB2I,mBA1Ff,SAAazM,GAAQ,IAAD,EACoB0B,mBAAS,MAD7B,mBACXN,EADW,KACGsL,EADH,OAEUhL,mBAAS,IAFnB,mBAEX+J,EAFW,KAEHkB,EAFG,OAGgBjL,mBAAS,IAHzB,mBAGAkL,GAHA,WASZ/J,EAAgB,SAACgK,EAAQ7H,GAC7BhF,EAAMO,QAAQuM,IAAI,cAAeD,EAAQ,CAAEE,KAAM,MACjD/M,EAAMO,QAAQuM,IAAI,aAAc,CAAE,IAAO9H,KAIrCzD,EAAU,SAACnB,GACfA,EAAEC,iBACFL,EAAMO,QAAQuM,IAAI,aAAc,IAChC9M,EAAMO,QAAQuM,IAAI,cAAe,KAG7BlC,EAAkB,SAAC5F,EAAMlC,IAC7B,WAAC,UAAAb,EAAAC,OAAA,kEAAAD,EAAA,MACmBI,MAAM,GAAD,OAlBX,wBAkBW,iBAAoB2C,EAAK1D,KAAO,CACrDgB,OAAQ,MACRG,QAAS,CACP,cAAgB,UAAhB,OAA2BK,GAC3B,KAAQ5B,KAAKsB,UAAUwC,GACvB,eAAgB,uBANrB,cACOtC,EADP,kBAAAT,EAAA,MASmBS,EAAIC,QATvB,OASOC,EATP,OAUC+J,EAAU/J,GAVX,qCAAD,IAcIG,EAAS,SAATA,IACJ,GAAI/C,EAAMO,QAAQA,QAAQC,WAAY,CACpC,IAAMS,EAAOC,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YACxCwM,EAAa,IAAIC,UAjCb,uBAmCVD,EAAWE,OAAS,WAClBF,EAAW3L,KAAKJ,EAAKK,MAGvB0L,EAAWG,UAAY,SAAC9B,GACtB,GAAIA,EAAIlJ,KAAKiL,SAAS,SAAU,CAC9B,IAAMjL,EAAOkJ,EAAIlJ,KAAKkL,MAAM,KAAK,GAC3BC,EAAWpM,KAAKC,MAAMgB,GAC5BwK,EAAUW,QAEP,GAAIjC,EAAIlJ,KAAKiL,SAAS,aAAc,CACvC,IAAMjL,EAAOkJ,EAAIlJ,KAAKkL,MAAM,KAAK,GAC3BC,EAAWpM,KAAKC,MAAMgB,GAC5B+C,QAAQC,IAAImI,GACZV,EAAaU,KAOjBN,EAAWO,QAAU,WACnBC,WAAWzK,EAAQ,MAErB2J,EAAcM,GACd,IAAMS,EAASvM,KAAKC,MAAMnB,EAAMO,QAAQA,QAAQC,YAC1CsC,EAAQ9C,EAAMO,QAAQA,QAAQE,YACpCmK,EAAgB6C,EAAQ3K,KAI5B,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOiK,KAAK,IAAIW,OAAQ,kBAAM,kBAAC,EAAD,iBAAY1N,EAAZ,CAAmBuB,QAASA,EAASH,aAAcA,QACjF,kBAAC,IAAD,CAAO2L,KAAK,IAAIY,UAAW9J,EAAM+J,OAAK,IACtC,kBAAC,IAAD,CAAOb,KAAK,YAAYW,OAAQ,kBAAM,kBAAC,EAAD,iBAAc1N,EAAd,CAAqB6C,cAAeA,EAAetB,QAASA,EAASwB,OAAQA,QACnH,kBAAC,IAAD,CAAOgK,KAAK,SAASW,OAAQ,kBAAM,kBAAC,EAAD,iBAAW1N,EAAX,CAAkB6C,cAAeA,EAAetB,QAASA,EAASwB,OAAQA,QAC7G,kBAAC,IAAD,CAAOgK,KAAK,WAAWW,OAAQ,kBAAM,kBAAC,EAAY1N,MAClD,kBAAC,IAAD,CAAO+M,KAAK,aAAaW,OAAQ,kBAAM,kBAAC,EAAD,iBAAe1N,EAAf,CAAsByL,OAAQA,EAAQb,gBAAiBA,QAC9F,kBAAC,IAAD,CAAOmC,KAAK,aAAaW,OAAQ,kBAAM,kBAAC,EAAD,iBAAe1N,EAAf,CAAsByL,OAAQA,EAAQb,gBAAiBA,QAC9F,kBAAC,IAAD,CAAOmC,KAAK,oBAAoBW,OAAQ,kBAAM,kBAAC,EAAD,iBAAsB1N,EAAtB,CAA6ByL,OAAQA,YC1FrEoC,QACW,cAA7BC,OAAOtI,SAASuI,UAEe,UAA7BD,OAAOtI,SAASuI,UAEhBD,OAAOtI,SAASuI,SAASC,MACvB,2DCXNC,IAASP,OAAO,kBAAC,IAAD,KAAiB,kBAAC,EAAD,OAA2BQ,SAASC,eAAe,SD0H9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4b4914bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unirse.be6809a1.png\";","module.exports = __webpack_public_path__ + \"static/media/crear.62aedac8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5f58e95e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.d5049a15.png\";","import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from '../../assets/logo.png'\nimport './NavBar.css';\nimport { useHistory } from \"react-router-dom\";\n\nfunction NavBar(props) {\n\n\n  let history = useHistory();\n\n  function irRegistro(e) {\n    e.preventDefault();\n    history.push(\"/register\");\n\n  }\n\n  function irInicio(e) {\n    e.preventDefault();\n    history.push(\"/login\");\n  }\n\n  function irHome(e) {\n    e.preventDefault();\n    history.push(\"/\");\n  }\n\n  function irPpal(e) {\n    e.preventDefault();\n    history.push(\"/ppalLog\");\n  }\n\n  function cerrarSesion(e) {\n    e.preventDefault();\n    const temp = JSON.parse(props.cookies.cookies.wheelsUser);\n    if (props.wsConnection) {\n      props.wsConnection.send(\"END:\" + temp.uid);\n      props.signout(e);\n      irHome(e);\n    }\n    else {\n      props.signout(e);\n      irHome(e);\n    }\n  }\n\n  function misCarros(e) {\n    e.preventDefault();\n    history.push(\"/misCarros\");\n  }\n\n  return (\n    !props.cookies.cookies.wheelsUser || !props.cookies.cookies.wheelsToken ?\n      <nav className=\"navbar navbar-light navbar-custom\">\n        <a onClick={irHome} className=\"navbar-brand\">\n\n          <img alt=\"logo\" id=\"logo-brand\" src={logo}></img>\n        </a>\n        <form className=\"form-inline\">\n          <button onClick={irRegistro} className=\"btn my-2 my-sm-0 yellow\" >Regístrate</button>\n          <button onClick={irInicio} className=\"btn my-2 my-sm-0 yellow\" >Inicia sesión</button>\n        </form>\n      </nav>\n      :\n      <nav className=\"navbar navbar-light navbar-custom\">\n        <a onClick={irPpal} className=\"navbar-brand\">\n\n          <img alt=\"logo\" id=\"logo-brand\" src={logo}></img>\n        </a>\n        <form className=\"form-inline\" onSubmit={cerrarSesion}>\n          <button onClick={misCarros} className=\"btn my-2 my-sm-0 yellow\" >Mis Carros</button>\n          <button type=\"submit\" className=\"btn my-2 my-sm-0 yellow\" >Cerrar sesión</button>\n        </form>\n      </nav>\n  );\n}\n\nexport default NavBar;","import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Login.css';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  let history = useHistory();\n  const backUrl = \"http://localhost:5000\";\n  const wsUrl = \"ws://localhost:5000\";\n  const [correo, setCorreo] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [error, setError] = useState(false);\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(correo);\n    console.log(pw);\n  }\n\n  const iniciarSesion = (e) => {\n    (async () => {\n      e.preventDefault();\n      const data = {\n        uid: correo,\n        password: pw\n      };\n      const req = await fetch(`${backUrl}/auth/signin`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: { 'Content-Type': 'application/json' }\n      });\n      const rta = await req.json();\n      props.funcionCookie(rta.token, correo);\n      if(props.cookies.cookies.wheelsToken===\"\" || props.cookies.cookies.wheelsToken===\"undefined\" ) {\n        setError(true);\n        if(props.signout)\n        props.signout(e);\n      }\n      else {\n        history.push(\"/ppalLog\");\n        props.wsConn();\n        // const temp = JSON.parse(props.cookies.cookies.wheelsUser);\n        // const connection = new WebSocket(wsUrl);\n        // connection.onopen = () => {\n        //   connection.send(temp.uid);\n        // }\n      }\n\n    })();\n  };\n\n  return (\n      <div className=\"App\">\n        <div className=\"container heading\">\n          <h2>Inicio sesión</h2>\n          <div className=\"heading\">\n            <div className=\"row\">\n              <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n              <div className=\"col-sm-8 col-md-8 col-lg-6\">\n                <form className=\"form\" onSubmit={iniciarSesion}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"user\">Usuario</label>\n                    <input required type=\"text\" className=\"form-control\" id=\"user\" onChange={e => setCorreo(e.target.value)} placeholder=\"Ingresa tu usuario\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pw\">Contraseña</label>\n                    <input required type=\"password\" className=\"form-control\" id=\"pw\" onChange={e => setPw(e.target.value)} placeholder=\"Contraseña\" />\n                  </div>\n                  {error ?\n                  <div className=\"text-danger\">Tus credenciales no son válidas</div>\n                  :\n                  <div></div>\n                  }\n                  <button type=\"submit\" className=\"btn yellow-black\">Inicia sesión</button>\n                </form>\n              </div>\n              <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Register.css';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Register(props) {\n\n\n  let history = useHistory();\n  const backUrl = \"http://localhost:5000\";\n  const wsUrl = \"ws://localhost:5000\";\n\n\n  const [correo, setCorreo] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [pwConfirm, setPwConfirm] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [error2, setError2] = useState(false);\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if(pw!=pwConfirm) {\n      setError(true);\n    }\n    else {\n      registrar(evt);\n    }\n}\n\nconst registrar = (e) => {\n  (async () => {\n    e.preventDefault();\n    setError(false);\n    setError2(false);\n    const data = {\n      uid: correo,\n      password: pw\n    };\n    const req = await fetch(`${backUrl}/auth/signup`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const rta = await req.json();\n    props.funcionCookie(rta.token, correo);\n    if(props.cookies.cookies.wheelsToken===\"\" || props.cookies.cookies.wheelsToken===\"undefined\" ) {\n      setError2(true);\n    props.signout(e);\n    }\n    else {\n      history.push(\"/ppalLog\");\n      props.wsConn();\n      // const temp = JSON.parse(props.cookies.cookies.wheelsUser);\n      // const connection = new WebSocket(wsUrl);\n      // connection.onopen = () => {\n      //   connection.send(temp.uid);\n      // }\n    }\n  })();\n};\n\n  return (\n<div className=\"App\">\n          <div className=\"container heading\">\n            <h2>Registro</h2>\n            <div className=\"heading\">\n              <div className=\"row\">\n                <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n                <div className=\"col-sm-8 col-md-8 col-lg-6\">\n                  <form className=\"form\" onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"user\">Usuario</label>\n                    <input required type=\"text\" className=\"form-control\" id=\"user\" onChange={e => setCorreo(e.target.value)}placeholder=\"Ingresa tu usuario\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pw\">Contraseña</label>\n                    <input required type=\"password\" className=\"form-control\" id=\"pw\" onChange={e => setPw(e.target.value)} placeholder=\"Contraseña\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pw-confirm\">Confimación contraseña</label>\n                    <input required type=\"password\" className=\"form-control\" id=\"pw-confirm\" onChange={e => setPwConfirm(e.target.value)} placeholder=\"Confirma tu contraseña\" />\n                  </div>\n                  {\n                    error2 ?\n                    <div className=\"text-danger\">Este usuario ya existe</div>\n                    :\n                    <div></div>\n                  }\n                  {error ?\n                  <div className=\"text-danger\">Las contraseñas ingresadas no coinciden</div>\n                  :\n                  <div></div>\n                  }\n\n                  <button type=\"submit\" className=\"btn yellow-black\">Regístrate</button>\n                </form>\n                </div>\n                <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default Register;","import React, { useState } from \"react\";\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Login from './components/Login/Login';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from './assets/logo2.png'\nimport Register from './components/Register/Register';\n// 0: Home\n// 1: InicioSesion\n// 2: Register\n// 3: PpalLog\n\n\nfunction Home() {\n\n  \n  return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"heading\">\n            <h1>Wheels Uniandes</h1>\n            <img alt=\"logo\" id=\"logo\" src={logo}></img>\n            <div className=\"heading\">\n              <i><h4>Únete y haz que tu experiencia de movilidad  <br />hacia la U sea mucho más agradable</h4></i>\n            </div>\n            <div className=\"heading\">\n              <p>¡<a href=\"/register\">Regístrate</a>, Crea rutas de Wheels o Únete a otra rutas!</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './PpalLog.css';\nimport unirse from '../../assets/unirse.png';\nimport crear from '../../assets/crear.png';\nimport { useHistory } from \"react-router-dom\";\nimport { func } from 'prop-types';\n\nfunction PpalLog(props) {\n\n  const [pregDestino, setPregDestino] = useState(false);\n  const [destino, setDestino] = useState('');\n  const [origen, setOrigen] = useState('');\n  const [maxInicio, setMaxInicio] = useState('');\n  const [maxDestino, setMaxDestino] = useState('');\n  const [lista, setLista] = useState([]);\n  const [listaMisWheels, setListaMisWheels] = useState([]);\n\n\n  const backUrl = \"http://localhost:5000\";\n\n  let history = useHistory();\n  function crearRuta() {\n    history.push(\"/crearRuta\");\n  }\n\n  function handleSubmit(e) {\n\n    e.preventDefault();\n    confirmarServicio();\n  }\n\n\n  const confirmarServicio = () => {\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n      const body = JSON.stringify({\n        \"direccionInicio\": origen,\n        \"direccionFin\": destino\n      });\n      const req = await fetch(`${backUrl}/services/confirmarMapa`, {\n        method: 'POST',\n        body: body,\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      console.log(rta);\n\n      const tempO = rta.resultadoInicio.results[0].geometry.location;\n      const tempD = rta.resultadoFin.results[0].geometry.location;\n      consultarServicios(tempO.lat, tempO.lng, tempD.lat, tempD.lng, +(maxInicio), +(maxDestino));\n    })();\n\n  }\n\n  const consultarServicios = (latOrigen, lonOrigen, latDestino, lonDestino, maxDistInicio, maxDistFinal) => {\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n      const bodyService = JSON.stringify({\n        \"fin\": {\n          \"lat\":latDestino,\n          \"lng\":lonDestino\n        },\n        \"inicio\": {\n          \"lat\":latOrigen,\n          \"lng\":lonOrigen\n        },\n        \"maxDistInicio\":maxDistInicio,\n        \"maxDistFinal\":maxDistFinal\n      });\n      const req = await fetch(`${backUrl}/services/buscarServicio`, {\n        method: 'POST',\n        body: bodyService,\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      setLista(rta);\n      // history.push('/rutasDisponibles');\n    })();\n  }\n\n  const misWheels = ()=>{\n    ( async ()=>{\n    const user = JSON.stringify(props.cookies.get('wheelsUser'));\n    console.log(\"vamos a consultar\")\n    const req = await fetch(`${backUrl}/services/misServicios`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n        'user': JSON.stringify(user),\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(\"aja y?\")\n    const rta = await req.json();\n    console.log(rta);\n    setListaMisWheels(rta);\n  })()\n  console.log(listaMisWheels)\n  };\n\n  function preguntarDestino() {\n    setPregDestino(true);\n  }\n\n  const unirseRuta = (bodyParam) => {\n    (async () => {\n\n      const user = props.cookies.get('wheelsUser');\n      const bodyService = JSON.stringify(bodyParam);\n      const req = await fetch(`${backUrl}/services/unirseServicio`, {\n        method: 'POST',\n        body: bodyService,\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      console.log(rta);\n      // history.push('/rutasDisponibles');\n\n    })();\n  }\n\n\n\n  function reservar(bodyParam) {\n    const newBody =\n      {\n        \"uid\":props.allCookies.wheelsUser.uid,\n        \"idService\" : bodyParam._id,\n        \"destino\" : bodyParam.destination\n      }\n      unirseRuta(newBody);\n  }\n  misWheels();\n\nconsole.log(listaMisWheels);\n\n  return (\n    props.cookies.cookies.wheelsToken ?\n      <div className=\"App\">\n        <div className=\"container heading\">\n          <h1>Bienvenido {props.allCookies.wheelsUser.uid} </h1>\n          <div className=\"row heading\">\n            <div className=\"col\">\n              <button onClick={crearRuta} className=\"btn yellow-black\">Crear ruta de Wheels</button>\n              <img className=\"wheels\" src={crear} ></img>\n            </div>\n            <div className=\"col\">\n              {\n                pregDestino && lista.length===0 ?\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"origen\">¿De dónde sales?</label>\n                        <input required type=\"text\" className=\"form-control\" id=\"origen\" onChange={e => setOrigen(e.target.value)} placeholder=\"Ingresa el origen\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"destino\">¿A dónde te diriges?</label>\n                        <input required type=\"text\" className=\"form-control\" id=\"destino\" onChange={e => setDestino(e.target.value)} placeholder=\"Ingresa tu destino\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"distInicio\">Distancia de punto de origen en metros</label>\n                        <input required type=\"text\" className=\"form-control\" id=\"distInicio\" onChange={e => setMaxInicio(e.target.value)} placeholder=\"Máxima distancia en metros de inicio\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"distDestino\">Distancia de punto de destino en metros</label>\n                        <input required type=\"text\" className=\"form-control\" id=\"distDestino\" onChange={e => setMaxDestino(e.target.value)} placeholder=\"Máxima distancia en metros de destino\" />\n                      </div>\n                      <button type=\"submit\" className=\"btn yellow-black\">Buscar</button>\n                    </form>\n                    :\n                    pregDestino && lista.length>=0 ?\n                <div>\n                <h2>Rutas disponibles</h2>\n                {lista\n                .map((element) => {\n                          //const param = element;\n                          console.log(element, element.servicio._id);\n                          return <div key={element.servicio._id} style={{marginBottom: 1.5 + 'rem'}}>\n                            <button onClick={() => reservar(element.servicio)} className=\"btn yellow\">Reservar</button>servicio de {element.servicio.dueño}. Duración aproximada del viaje: {element.servicio.duracionAprox}\n                          </div>\n                        })\n                      // <option disabled>Agrega algún carro</option>\n                    }\n                </div>\n                :\n                <div>\n                  <button onClick={preguntarDestino} className=\"btn yellow-black\">Unirse a ruta de Wheels</button>\n                  <img className=\"wheels\" src={unirse} ></img>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"row heading\">\n              <h2>Mis wheels</h2>\n\n          </div>\n        </div>\n      </div>\n      :\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\n  );\n}\n\nexport default PpalLog;","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '16rem'\n};\nconst dotenv = require(\"dotenv\");\ndotenv.config();\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker\n    });\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={18}\n        style={mapStyles}\n        initialCenter={{\n         lat: this.props.lat,\n         lng: this.props.lng\n        }}\n      >\n        <Marker\n          onClick={this.onMarkerClick}\n        />\n        </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n})(MapContainer);","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './crearRuta.css';\nimport unirse from '../../assets/unirse.png'\nimport crear from '../../assets/crear.png'\nimport MapContainer from '../Map/MapContainer'\nimport { useHistory } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\n\nfunction CrearRuta(props) {\n\n\n  var today = new Date();\n  var anho = today.getFullYear();\n  var mes = `${today.getMonth() + 1}`.padStart(2, 0);\n  var dia = `${today.getDate()}`.padStart(2, 0);\n  var horaT = `${today.getHours()}`.padStart(2, 0);\n  var minutos = `${today.getMinutes()}`.padStart(2, 0);\n\n  const [origen, setOrigen] = useState('');\n  const [destino, setDestino] = useState('');\n  const [hora, setHora] = useState('');\n  const [latOrigen, setLatOrigen] = useState(0);\n  const [lonOrigen, setLonOrigen] = useState(0);\n  const [latDestino, setLatDestino] = useState(0);\n  const [lonDestino, setLonDestino] = useState(0);\n  const [confirmacion, setConfirmacion] = useState(false);\n  const [confirmacion1, setConfirmacion1] = useState(false);\n  const [confirmacion2, setConfirmacion2] = useState(false);\n  const [fecha, setFecha] = useState('');\n  const [seleccionado, setSeleccionado] = useState(false);\n  const [cupos, setCupos] = useState(0);\n  const [cupoExtra, setCupoExtra] = useState(0);\n\n  const carros = props.consultarCarros(JSON.parse(props.cookies.cookies.wheelsUser), props.cookies.cookies.wheelsToken);\n\n\n  let history = useHistory();\n  const dotenv = require(\"dotenv\");\n  dotenv.config();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSeleccionado(true);\n  }\n\n\n  function repetirProceso() {\n    alert(\"Vuelve a ingresar los datos para obtener mayor precisión\");\n  }\n  const backUrl = \"http://localhost:5000\";\n\n  const style = {\n    width: '100%',\n    height: '100%'\n  }\n\n\n  function enviarRuta1() {\n    setConfirmacion1(true);\n    console.log(confirmacion1);\n    console.log(confirmacion2);\n    if (confirmacion1 && confirmacion2) {\n      crearServicio();\n    }\n    else {\n      alert(\"Por favor confirme el otro punto\");\n    }\n  }\n\n  function enviarRuta2() {\n    setConfirmacion2(true);\n    console.log(confirmacion1);\n    console.log(confirmacion2);\n    if (confirmacion1 && confirmacion2) {\n      crearServicio();\n    }\n    else {\n      alert(\"Por favor confirme el otro punto\");\n    }\n  }\n\n  const crearServicio = () => {\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n      const fechaTotal = fecha + \"T\" + hora + \":00\";\n      const fechita = new Date(fechaTotal);\n      const timestamp = Math.floor(fechita.getTime() / 1000);\n      const bodyService = JSON.stringify({\n        \"dueño\": user.uid,\n        \"cuposRestantes\": cupos,\n        \"usuarios\": [],\n        \"ruta\": [],\n        \"duracionAprox\":\"\",\n        \"instrucciones\":[],\n        \"distancia\":\"\",\n        \"waypoints\":[],\n        \"initial\": {\n          \"lat\": latOrigen,\n          \"lng\": lonOrigen\n        },\n        \"destination\": {\n          \"lat\": latDestino,\n          \"lng\": lonDestino\n        },\n        \"comenzado\": false,\n        \"terminado\": false,\n        \"departureTime\": timestamp\n      });\n      const req = await fetch(`${backUrl}/services/crearServicio`, {\n        method: 'POST',\n        body: bodyService,\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      console.log(rta);\n      if (rta.msg === 'OK') {\n        alert(\"Servicio creado satisfactoriamente!\");\n        history.push('ppalLog');\n      }\n    })();\n  }\n\n\n\n\n  const nueva = () => {\n    setConfirmacion(false);\n    console.log(origen, destino, hora);\n    confirmarServicio();\n  }\n\n\n  const confirmarServicio = () => {\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n      const body = JSON.stringify({\n        \"direccionInicio\": origen,\n        \"direccionFin\": destino\n      });\n      const req = await fetch(`${backUrl}/services/confirmarMapa`, {\n        method: 'POST',\n        body: body,\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      console.log(rta);\n\n      const tempO = rta.resultadoInicio.results[0].geometry.location;\n      const tempD = rta.resultadoFin.results[0].geometry.location;\n\n      console.log(tempO, tempD);\n      setLatOrigen(tempO.lat);\n      setLonOrigen(tempO.lng);\n\n      setLatDestino(tempD.lat);\n      setLonDestino(tempD.lng);\n      console.log(\"origen\", latOrigen, lonOrigen);\n      console.log(\"destino\", latDestino, lonDestino);\n\n      setConfirmacion(true);\n      if(rta==\"200\"){\n\n      }\n\n      //usa la respuesta\n    })();\n  }\n\n\n  const unirse = () => {\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n\n      const req = await fetch(`${backUrl}/loQueQuieroHacer`, {\n        method: 'POST',\n        body: {},\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      //usa la respuesta\n    })();\n  }\n\n  return (\n    props.cookies.cookies.wheelsToken ?\n      <div className=\"App\">\n        <div className=\"container heading\">\n          <h1>Crea una nueva ruta, {props.allCookies.wheelsUser.uid} </h1>\n          <div className=\"row\">\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n            <div className=\"col-sm-8 col-md-8 col-lg-6\">\n              <form className=\"form heading\" onSubmit={handleSubmit}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"origen\">Origen de tu ruta</label>\n                  <input required type=\"text\" className=\"form-control\" id=\"origen\" onChange={e => setOrigen(e.target.value)} placeholder=\"Ingresa desde dónde sales\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"destino\">Destino de tu ruta</label>\n                  <input required type=\"text\" className=\"form-control\" id=\"destino\" onChange={e => setDestino(e.target.value)} placeholder=\"Ingresa cuál es tu destino\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"fecha\">Fecha de salida</label>\n                  <input type=\"date\" className=\"form-control\" id=\"fecha\" name=\"trip-start\" min={anho + \"-\" + mes + \"-\" + dia} max=\"2025-12-31\" onChange={e => setFecha(e.target.value)}></input>\n                  <label htmlFor=\"hora\">Hora de salida</label>\n                  <input className=\"form-control\" type=\"time\" id=\"hora\" name=\"appt\" onChange={e => setHora(e.target.value)} required></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"carro\">Elige el carro de esta ruta</label>\n                  <select required className=\"form-control\" id=\"carro\" placeholder=\"Elige el carro\" onChange={e => setCupoExtra(e.target.value)}>\n                    <option>Elige uno de tus carros</option>\n                    {props.carros && props.carros.length > 0 ?\n                      props.carros\n                        .map((element) => {\n                          return <option value={element.cupos}>\n                            {element.marca} {element.linea} de placas {element.placas} (Cupo maximo {element.cupos})\n                          </option>\n                        })\n                      :\n                      <div></div>\n                      // <option disabled>Agrega algún carro</option>\n                    }\n                  </select>\n                </div>\n                {/* <input class=\"flatpickr flatpickr-input\" type=\"text\" placeholder=\"Select Date..\" data-id=\"datetime\" readonly=\"readonly\"/> */}\n                <button onClick={nueva} className=\"btn yellow-black\">Continuar Proceso</button>\n                {seleccionado ? <div><input required type=\"number\" min=\"1\" max={\"\" + cupoExtra} className=\"form-control\" id=\"cupos\" onChange={e => setCupos(e.target.value)} placeholder=\"Ingresa cantidad de cupos disponibles\" /> <button type=\"submit\" className=\"btn yellow-black\">Crear ruta</button></div> : <div></div>}\n              </form>\n              {confirmacion ?\n                <div className=\"row maps heading\">\n                  <div className=\"col-6 origen\">\n                    ¿Es correcto el <i>origen</i>?\n                    <br />\n                    <button onClick={enviarRuta1} className=\"btn yellow\">Sí</button>\n                    <button onClick={repetirProceso} className=\"btn yellow\">No</button>\n\n                    <MapContainer\n                      lat={latOrigen}\n                      lng={lonOrigen}\n                    ></MapContainer>\n\n                  </div>\n\n                  <div className=\"col-6 destino\">\n                    ¿Es correcto el <i>destino</i>?\n                    <br />\n                    <button onClick={enviarRuta2} className=\"btn yellow\">Sí</button>\n                    <button onClick={repetirProceso} className=\"btn yellow\">No</button>\n                    <MapContainer\n                      lat={latDestino}\n                      lng={lonDestino}\n                    ></MapContainer>\n                  </div>\n\n                </div>\n                :\n                <div></div>}\n            </div>\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n          </div>        </div>\n      </div>\n      :\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br /> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\n  );\n}\n\nexport default CrearRuta;\n\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './MisCarros.css';\nimport unirse from '../../assets/unirse.png';\nimport crear from '../../assets/crear.png';\nimport { useHistory } from \"react-router-dom\";\n\nfunction AñadirCarro(props) {\n\n  let history = useHistory();\n  const [marca, setMarca] = useState('');\n  const [linea, setLinea] = useState('');\n  const [placas, setPlacas] = useState('');\n  const [color, setColor] = useState('');\n  const [cupos, setCupos] = useState(0);\n\n  const backUrl = \"http://localhost:5000\";\n  const actualUser = JSON.parse(props.cookies.cookies.wheelsUser).uid;\n  const body = {\n    \"uid\":actualUser,\n    \"carro\": {\"marca\": marca,\n      \"linea\": linea,\n      \"placas\": placas,\n      \"color\": color,\n      \"cupos\": cupos\n    }\n  };\n\n\n  const crearCarro = ()=>{\n    (async () => {\n      const user = props.cookies.get('wheelsUser');\n      const req = await fetch(`${backUrl}/cars/agregarcarro`, {\n        method:'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n\n      //usa la respuesta\n    })();\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    crearCarro();\n\n  }\n\n  return (\n    props.cookies.cookies.wheelsToken ?\n    <form className=\"form \" onSubmit={handleSubmit}>\n      <h1>Añadir nuevo carro </h1>\n      <div className=\"form-group\">\n        <label htmlFor=\"marca\">Marca de tu carro</label>\n        <input required type=\"text\" className=\"form-control\" id=\"marca\" onChange={e => setMarca(e.target.value)} placeholder=\"Ingresa la marca Ej. Mazda\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"linea\">Linea de tu carro</label>\n        <input required type=\"text\" className=\"form-control\" id=\"linea\" onChange={e => setLinea(e.target.value)} placeholder=\"Ingresa la línea Ej. 3 Touring\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"placas\">Placas de tu carro</label>\n        <input required type=\"text\" pattern=\"[A-Z]{3}[-][0-9]{3}\" className=\"form-control\" id=\"placas\" onChange={e => setPlacas(e.target.value)} placeholder=\"Ingresa las placas Ej. AAA-123\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"color\">Color de tu carro</label>\n        <input required type=\"text\" className=\"form-control\" id=\"color\" onChange={e => setColor(e.target.value)} placeholder=\"Ingresa el color\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"cupos\">Cupos</label>\n        <input required type=\"number\" min=\"2\" max=\"9\" className=\"form-control\" id=\"cupos\" onChange={e => setCupos(e.target.value)} placeholder=\"Ingresa cantidad de pasajeros\" />\n      </div>\n      <button type=\"submit\" className=\"btn yellow-black\">Agregar carro</button>\n    </form>\n    :\n    <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\n  );\n}\n\nexport default AñadirCarro;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './MisCarros.css';\nimport unirse from '../../assets/unirse.png';\nimport crear from '../../assets/crear.png';\nimport AñadirCarro from './AñadirCarro';\n\nfunction MisCarros(props) {\n\n  const [agregar, setAgregar] = useState(false);\n\n  function agregarCarro() {\n    setAgregar(true);\n  }\n  const carros = props.consultarCarros(JSON.parse(props.cookies.cookies.wheelsUser), props.cookies.cookies.wheelsToken);\n\n\n  return (\n    props.cookies.cookies.wheelsToken ?\n      <div className=\"App\">\n        <div className=\"container heading\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-5 col-lg-5\">\n              <h1>Tus carros, {props.allCookies.wheelsUser.uid} </h1>\n              {props.carros.length > 0 ?\n                props.carros.map((element) => {\n                  return <p key={element.placas}>\n                    {element.marca} {element.linea} de placas <strong>{element.placas}</strong>\n                  </p>\n                })\n                :\n                <p>Aún no tienes carros :(</p>}\n            </div>\n            <div className=\" col-md-2 col-lg-2\"></div>\n            <div className=\"col-sm-12 col-md-5 col-lg-5 \">\n              {agregar ?\n                <AñadirCarro {...props} />\n                :\n                <div className=\"App\">\n                  <div>\n                    <button onClick={agregarCarro} className=\"btn yellow-black\">Agregar carro</button>\n                  </div>\n                  <div className=\"App\">\n                    <img className=\"wheels-2\" src={unirse}></img>\n                  </div>\n                </div>\n              }\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br /> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\n  );\n}\n\nexport default MisCarros;","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './RutasDisponibles.css';\nimport unirse from '../../assets/unirse.png'\nimport crear from '../../assets/crear.png'\n\nfunction RutasDisponibles(props) {\n\n\n  return (\n    props.cookies.cookies.wheelsToken ?\n      <div className=\"App\">\n        <div className=\"container heading\">\n          <h1>Rutas disponibles para tí, {props.allCookies.wheelsUser.uid} </h1>\n          <div className=\"row\">\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n            <div className=\"col-sm-8 col-md-8 col-lg-6 heading\">\n              <p>Ruta #1</p>\n              <p>Ruta #2</p>\n              <p>Ruta #3</p>\n              <p>Ruta #4</p>\n            </div>\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\n          </div>        </div>\n      </div>\n      :\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\n  );\n}\n\nexport default RutasDisponibles;\n\n","import React, { useState } from \"react\";\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './Home'\nimport Login from './components/Login/Login';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Register from './components/Register/Register';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport PpalLog from \"./components/PpalLog/PpalLog\";\nimport CrearRuta from \"./components/crearRuta/CrearRuta\";\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport MisCarros from \"./components/MisCarros/MisCarros\";\nimport RutasDisponibles from \"./components/RutasDisponibles/RutasDisponibles\";\n// 0: Home\n// 1: InicioSesion\n// 2: Register\n// 3: PpalLog\n\n\nfunction App(props) {\n  const [wsConnection, setConnection] = useState(null);\n  const [carros, setCarros] = useState([]);\n  const [servicios, setServicios] = useState([]);\n\n  const backUrl = \"http://localhost:5000\";\n  const wsUrl = \"ws://localhost:5000\";\n  var timerId = 0;\n\n  const funcionCookie = (cookie, user) => {\n    props.cookies.set('wheelsToken', cookie, { path: '/' });\n    props.cookies.set('wheelsUser', { \"uid\": user });\n\n  }\n\n  const signout = (e) => {\n    e.preventDefault();\n    props.cookies.set('wheelsUser', '');\n    props.cookies.set('wheelsToken', '');\n  }\n\n  const consultarCarros = (user, token) => {\n    (async () => {\n      const req = await fetch(`${backUrl}/cars/${user.uid}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'user': JSON.stringify(user),\n          'Content-Type': 'application/json'\n        }\n      });\n      const rta = await req.json();\n      setCarros(rta);\n    })();\n  };\n\n  const wsConn = () => {\n    if (props.cookies.cookies.wheelsUser) {\n      const temp = JSON.parse(props.cookies.cookies.wheelsUser);\n      const connection = new WebSocket(wsUrl);\n\n      connection.onopen = () => {\n        connection.send(temp.uid);\n      }\n\n      connection.onmessage = (msg) => {\n        if (msg.data.includes(\"cars#\")) {\n          const data = msg.data.split(\"#\")[1];\n          const jsonData = JSON.parse(data);\n          setCarros(jsonData);\n        }\n        else if (msg.data.includes(\"services#\")) {\n          const data = msg.data.split(\"#\")[1];\n          const jsonData = JSON.parse(data);\n          console.log(jsonData);\n          setServicios(jsonData);\n        }\n        else {\n          //Nothing to do\n        }\n      };\n\n      connection.onclose = () => {\n        setTimeout(wsConn, 1000);\n      };\n      setConnection(connection);\n      const userId = JSON.parse(props.cookies.cookies.wheelsUser);\n      const token = props.cookies.cookies.wheelsToken;\n      consultarCarros(userId, token);\n    }\n  }\n\n  return (\n    <Router>\n\n      <Route path=\"/\" render={() => <NavBar {...props} signout={signout} wsConnection={wsConnection} />} />\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/register\" render={() => <Register {...props} funcionCookie={funcionCookie} signout={signout} wsConn={wsConn} />} />\n      <Route path=\"/login\" render={() => <Login {...props} funcionCookie={funcionCookie} signout={signout} wsConn={wsConn} />} />\n      <Route path='/ppalLog' render={() => <PpalLog {...props} />} />\n      <Route path='/crearRuta' render={() => <CrearRuta {...props} carros={carros} consultarCarros={consultarCarros}/>} />\n      <Route path='/misCarros' render={() => <MisCarros {...props} carros={carros} consultarCarros={consultarCarros} />} />\n      <Route path='/rutasDisponibles' render={() => <RutasDisponibles {...props} carros={carros} />} />\n\n\n    </Router>\n\n  );\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost htmlFor IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs htmlFor this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached htmlFor offline use.\" message.\n              console.log('Content is cached htmlFor offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}