{"version":3,"sources":["assets/unirse.png","assets/crear.png","assets/logo.png","assets/logo2.png","components/NavBar/NavBar.js","components/Login/Login.js","components/Register/Register.js","Home.js","components/PpalLog/PpalLog.js","components/Map/MapContainer.js","components/crearRuta/CrearRuta.js","components/MisCarros/AñadirCarro.js","components/MisCarros/MisCarros.js","components/RutasDisponibles/RutasDisponibles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","history","useHistory","irHome","e","preventDefault","push","cookies","wheelsUser","wheelsToken","className","onClick","alt","id","src","logo","onSubmit","temp","JSON","parse","wsConnection","send","uid","signout","type","Login","useState","correo","setCorreo","pw","setPw","error","setError","a","data","password","fetch","method","body","stringify","headers","req","json","rta","funcionCookie","token","wsConn","htmlFor","required","onChange","target","value","placeholder","Register","pwConfirm","setPwConfirm","error2","setError2","registrar","evt","Home","href","PpalLog","pregDestino","setPregDestino","destino","setDestino","origen","setOrigen","maxInicio","setMaxInicio","maxDestino","setMaxDestino","lista","setLista","backUrl","confirmarServicio","user","get","tempO","resultadoInicio","results","geometry","location","tempD","resultadoFin","consultarServicios","lat","lng","latOrigen","lonOrigen","latDestino","lonDestino","maxDistInicio","maxDistFinal","bodyService","allCookies","crear","length","map","element","console","log","key","_id","style","marginBottom","unirse","mapStyles","width","height","require","config","MapContainer","state","activeMarker","selectedPlace","onMarkerClick","marker","setState","google","this","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","process","CrearRuta","today","Date","anho","getFullYear","mes","getMonth","padStart","dia","getDate","horaT","getHours","minutos","getMinutes","hora","setHora","setLatOrigen","setLonOrigen","setLatDestino","setLonDestino","confirmacion","setConfirmacion","confirmacion1","setConfirmacion1","confirmacion2","setConfirmacion2","fecha","setFecha","seleccionado","setSeleccionado","cupos","setCupos","cupoExtra","setCupoExtra","repetirProceso","alert","crearServicio","fechita","timestamp","Math","floor","getTime","msg","name","min","max","carros","marca","linea","placas","AñadirCarro","setMarca","setLinea","setPlacas","color","setColor","crearCarro","pattern","MisCarros","agregar","setAgregar","RutasDisponibles","withCookies","setConnection","setCarros","setServicios","cookie","set","path","connection","WebSocket","onopen","onmessage","includes","split","jsonData","onclose","text","consultarCarros","render","component","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.689297bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unirse.be6809a1.png\";","module.exports = __webpack_public_path__ + \"static/media/crear.62aedac8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5f58e95e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.d5049a15.png\";","import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from '../../assets/logo.png'\r\nimport './NavBar.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NavBar(props) {\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  function irRegistro(e) {\r\n    e.preventDefault();\r\n    history.push(\"/register\");\r\n\r\n  }\r\n\r\n  function irInicio(e) {\r\n    e.preventDefault();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  function irHome(e) {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function irPpal(e) {\r\n    e.preventDefault();\r\n    history.push(\"/ppalLog\");\r\n  }\r\n\r\n  function cerrarSesion(e) {\r\n    e.preventDefault();\r\n    const temp = JSON.parse(props.cookies.cookies.wheelsUser);\r\n    if (props.wsConnection) {\r\n      props.wsConnection.send(\"END:\" + temp.uid);\r\n      props.signout(e);\r\n      irHome(e);\r\n    }\r\n    else {\r\n      props.signout(e);\r\n      irHome(e);\r\n    }\r\n  }\r\n\r\n  function misCarros(e) {\r\n    e.preventDefault();\r\n    history.push(\"/misCarros\");\r\n  }\r\n\r\n  return (\r\n    !props.cookies.cookies.wheelsUser || !props.cookies.cookies.wheelsToken ?\r\n      <nav className=\"navbar navbar-light navbar-custom\">\r\n        <a onClick={irHome} className=\"navbar-brand\">\r\n\r\n          <img alt=\"logo\" id=\"logo-brand\" src={logo}></img>\r\n        </a>\r\n        <form className=\"form-inline\">\r\n          <button onClick={irRegistro} className=\"btn my-2 my-sm-0 yellow\" >Regístrate</button>\r\n          <button onClick={irInicio} className=\"btn my-2 my-sm-0 yellow\" >Inicia sesión</button>\r\n        </form>\r\n      </nav>\r\n      :\r\n      <nav className=\"navbar navbar-light navbar-custom\">\r\n        <a onClick={irPpal} className=\"navbar-brand\">\r\n\r\n          <img alt=\"logo\" id=\"logo-brand\" src={logo}></img>\r\n        </a>\r\n        <form className=\"form-inline\" onSubmit={cerrarSesion}>\r\n          <button onClick={misCarros} className=\"btn my-2 my-sm-0 yellow\" >Mis Carros</button>\r\n          <button type=\"submit\" className=\"btn my-2 my-sm-0 yellow\" >Cerrar sesión</button>\r\n        </form>\r\n      </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './Login.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n\r\n  let history = useHistory();\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n  const wsUrl = \"wss://wheelsuniandes.herokuapp.com\";\r\n  const [correo, setCorreo] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    console.log(correo);\r\n    console.log(pw);\r\n  }\r\n\r\n  const iniciarSesion = (e) => {\r\n    (async () => {\r\n      e.preventDefault();\r\n      const data = {\r\n        uid: correo,\r\n        password: pw\r\n      };\r\n      const req = await fetch(`${backUrl}/auth/signin`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const rta = await req.json();\r\n      props.funcionCookie(rta.token, correo);\r\n      if(props.cookies.cookies.wheelsToken===\"\" || props.cookies.cookies.wheelsToken===\"undefined\" ) {\r\n        setError(true);\r\n        if(props.signout)\r\n        props.signout(e);\r\n      }\r\n      else {\r\n        history.push(\"/ppalLog\");\r\n        props.wsConn();\r\n        // const temp = JSON.parse(props.cookies.cookies.wheelsUser);\r\n        // const connection = new WebSocket(wsUrl);\r\n        // connection.onopen = () => {\r\n        //   connection.send(temp.uid);\r\n        // }\r\n      }\r\n\r\n    })();\r\n  };\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <div className=\"container heading\">\r\n          <h2>Inicio sesión</h2>\r\n          <div className=\"heading\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n              <div className=\"col-sm-8 col-md-8 col-lg-6\">\r\n                <form className=\"form\" onSubmit={iniciarSesion}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"user\">Usuario</label>\r\n                    <input required type=\"text\" className=\"form-control\" id=\"user\" onChange={e => setCorreo(e.target.value)} placeholder=\"Ingresa tu usuario\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"pw\">Contraseña</label>\r\n                    <input required type=\"password\" className=\"form-control\" id=\"pw\" onChange={e => setPw(e.target.value)} placeholder=\"Contraseña\" />\r\n                  </div>\r\n                  {error ?\r\n                  <div className=\"text-danger\">Tus credenciales no son válidas</div>\r\n                  :\r\n                  <div></div>\r\n                  }\r\n                  <button type=\"submit\" className=\"btn yellow-black\">Inicia sesión</button>\r\n                </form>\r\n              </div>\r\n              <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './Register.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Register(props) {\r\n\r\n\r\n  let history = useHistory();\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n  const wsUrl = \"wss://wheelsuniandes.herokuapp.com\";\r\n\r\n\r\n  const [correo, setCorreo] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [pwConfirm, setPwConfirm] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [error2, setError2] = useState(false);\r\n\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if(pw!=pwConfirm) {\r\n      setError(true);\r\n    }\r\n    else {\r\n      registrar(evt);\r\n    }\r\n}\r\n\r\nconst registrar = (e) => {\r\n  (async () => {\r\n    e.preventDefault();\r\n    setError(false);\r\n    setError2(false);\r\n    const data = {\r\n      uid: correo,\r\n      password: pw\r\n    };\r\n    const req = await fetch(`${backUrl}/auth/signup`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const rta = await req.json();\r\n    props.funcionCookie(rta.token, correo);\r\n    if(props.cookies.cookies.wheelsToken===\"\" || props.cookies.cookies.wheelsToken===\"undefined\" ) {\r\n      setError2(true);\r\n    props.signout(e);\r\n    }\r\n    else {\r\n      history.push(\"/ppalLog\");\r\n      props.wsConn();\r\n      // const temp = JSON.parse(props.cookies.cookies.wheelsUser);\r\n      // const connection = new WebSocket(wsUrl);\r\n      // connection.onopen = () => {\r\n      //   connection.send(temp.uid);\r\n      // }\r\n    }\r\n  })();\r\n};\r\n\r\n  return (\r\n<div className=\"App\">\r\n          <div className=\"container heading\">\r\n            <h2>Registro</h2>\r\n            <div className=\"heading\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n                <div className=\"col-sm-8 col-md-8 col-lg-6\">\r\n                  <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"user\">Usuario</label>\r\n                    <input required type=\"text\" className=\"form-control\" id=\"user\" onChange={e => setCorreo(e.target.value)}placeholder=\"Ingresa tu usuario\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"pw\">Contraseña</label>\r\n                    <input required type=\"password\" className=\"form-control\" id=\"pw\" onChange={e => setPw(e.target.value)} placeholder=\"Contraseña\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"pw-confirm\">Confimación contraseña</label>\r\n                    <input required type=\"password\" className=\"form-control\" id=\"pw-confirm\" onChange={e => setPwConfirm(e.target.value)} placeholder=\"Confirma tu contraseña\" />\r\n                  </div>\r\n                  {\r\n                    error2 ?\r\n                    <div className=\"text-danger\">Este usuario ya existe</div>\r\n                    :\r\n                    <div></div>\r\n                  }\r\n                  {error ?\r\n                  <div className=\"text-danger\">Las contraseñas ingresadas no coinciden</div>\r\n                  :\r\n                  <div></div>\r\n                  }\r\n\r\n                  <button type=\"submit\" className=\"btn yellow-black\">Regístrate</button>\r\n                </form>\r\n                </div>\r\n                <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Register;","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Login from './components/Login/Login';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from './assets/logo2.png'\r\nimport Register from './components/Register/Register';\r\n// 0: Home\r\n// 1: InicioSesion\r\n// 2: Register\r\n// 3: PpalLog\r\n\r\n\r\nfunction Home() {\r\n\r\n  \r\n  return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"heading\">\r\n            <h1>Wheels Uniandes</h1>\r\n            <img alt=\"logo\" id=\"logo\" src={logo}></img>\r\n            <div className=\"heading\">\r\n              <i><h4>Únete y haz que tu experiencia de movilidad  <br />hacia la U sea mucho más agradable</h4></i>\r\n            </div>\r\n            <div className=\"heading\">\r\n              <p>¡<a href=\"/register\">Regístrate</a>, Crea rutas de Wheels o Únete a otra rutas!</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './PpalLog.css';\r\nimport unirse from '../../assets/unirse.png';\r\nimport crear from '../../assets/crear.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { func } from 'prop-types';\r\n\r\nfunction PpalLog(props) {\r\n\r\n  const [pregDestino, setPregDestino] = useState(false);\r\n  const [destino, setDestino] = useState('');\r\n  const [origen, setOrigen] = useState('');\r\n  const [maxInicio, setMaxInicio] = useState('');\r\n  const [maxDestino, setMaxDestino] = useState('');\r\n  const [lista, setLista] = useState([]);\r\n  const [listaMisWheels, setListaMisWheels] = useState([]);\r\n\r\n\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n\r\n  let history = useHistory();\r\n  function crearRuta() {\r\n    history.push(\"/crearRuta\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n\r\n    e.preventDefault();\r\n    confirmarServicio();\r\n  }\r\n\r\n\r\n  const confirmarServicio = () => {\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n      const body = JSON.stringify({\r\n        \"direccionInicio\": origen,\r\n        \"direccionFin\": destino\r\n      });\r\n      const req = await fetch(`${backUrl}/services/confirmarMapa`, {\r\n        method: 'POST',\r\n        body: body,\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n\r\n\r\n      const tempO = rta.resultadoInicio.results[0].geometry.location;\r\n      const tempD = rta.resultadoFin.results[0].geometry.location;\r\n      consultarServicios(tempO.lat, tempO.lng, tempD.lat, tempD.lng, +(maxInicio), +(maxDestino));\r\n    })();\r\n\r\n  }\r\n\r\n  const consultarServicios = (latOrigen, lonOrigen, latDestino, lonDestino, maxDistInicio, maxDistFinal) => {\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n      const bodyService = JSON.stringify({\r\n        \"fin\": {\r\n          \"lat\":latDestino,\r\n          \"lng\":lonDestino\r\n        },\r\n        \"inicio\": {\r\n          \"lat\":latOrigen,\r\n          \"lng\":lonOrigen\r\n        },\r\n        \"maxDistInicio\":maxDistInicio,\r\n        \"maxDistFinal\":maxDistFinal\r\n      });\r\n      const req = await fetch(`${backUrl}/services/buscarServicio`, {\r\n        method: 'POST',\r\n        body: bodyService,\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n      setLista(rta);\r\n      // history.push('/rutasDisponibles');\r\n    })();\r\n  }\r\n\r\n  const misWheels = ()=>{\r\n    ( async ()=>{\r\n    const user = JSON.stringify(props.cookies.get('wheelsUser'));\r\n    const req = await fetch(`${backUrl}/services/misServicios`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n        'user': JSON.stringify(user),\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const rta = await req.json();\r\n    setListaMisWheels(rta);\r\n  })()\r\n  };\r\n\r\n  function preguntarDestino() {\r\n    setPregDestino(true);\r\n  }\r\n\r\n  const unirseRuta = (bodyParam) => {\r\n    (async () => {\r\n\r\n      const user = props.cookies.get('wheelsUser');\r\n      const bodyService = JSON.stringify(bodyParam);\r\n      const req = await fetch(`${backUrl}/services/unirseServicio`, {\r\n        method: 'POST',\r\n        body: bodyService,\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n      // history.push('/rutasDisponibles');\r\n\r\n    })();\r\n  }\r\n\r\n\r\n\r\n  function reservar(bodyParam) {\r\n    const newBody =\r\n      {\r\n        \"uid\":props.allCookies.wheelsUser.uid,\r\n        \"idService\" : bodyParam._id,\r\n        \"destino\" : bodyParam.destination\r\n      }\r\n      unirseRuta(newBody);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    props.cookies.cookies.wheelsToken ?\r\n      <div className=\"App\">\r\n        <div className=\"container heading\">\r\n          <h1>Bienvenido {props.allCookies.wheelsUser.uid} </h1>\r\n          <div className=\"row heading\">\r\n            <div className=\"col\">\r\n              <button onClick={crearRuta} className=\"btn yellow-black\">Crear ruta de Wheels</button>\r\n              <img className=\"wheels\" src={crear} ></img>\r\n            </div>\r\n            <div className=\"col\">\r\n              {\r\n                pregDestino && lista.length===0 ?\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"origen\">¿De dónde sales?</label>\r\n                        <input required type=\"text\" className=\"form-control\" id=\"origen\" onChange={e => setOrigen(e.target.value)} placeholder=\"Ingresa el origen\" />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"destino\">¿A dónde te diriges?</label>\r\n                        <input required type=\"text\" className=\"form-control\" id=\"destino\" onChange={e => setDestino(e.target.value)} placeholder=\"Ingresa tu destino\" />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"distInicio\">Distancia de punto de origen en metros</label>\r\n                        <input required type=\"text\" className=\"form-control\" id=\"distInicio\" onChange={e => setMaxInicio(e.target.value)} placeholder=\"Máxima distancia en metros de inicio\" />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"distDestino\">Distancia de punto de destino en metros</label>\r\n                        <input required type=\"text\" className=\"form-control\" id=\"distDestino\" onChange={e => setMaxDestino(e.target.value)} placeholder=\"Máxima distancia en metros de destino\" />\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn yellow-black\">Buscar</button>\r\n                    </form>\r\n                    :\r\n                    pregDestino && lista.length>=0 ?\r\n                <div>\r\n                <h2>Rutas disponibles</h2>\r\n                {lista\r\n                .map((element) => {\r\n                          //const param = element;\r\n                          console.log(element);\r\n                          return <div key={element._id} style={{marginBottom: 1.5 + 'rem'}}>\r\n                          </div>\r\n                        })\r\n                        //<button onClick={() => reservar(param)} className=\"btn yellow\">Reservar</button>servicio el {element.departureTime} por {element.usuarios[0]}\r\n                      // <option disabled>Agrega algún carro</option>\r\n                    }\r\n                </div>\r\n                :\r\n                <div>\r\n                  <button onClick={preguntarDestino} className=\"btn yellow-black\">Unirse a ruta de Wheels</button>\r\n                  <img className=\"wheels\" src={unirse} ></img>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"row heading\">\r\n              <h2>Mis wheels</h2>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\r\n  );\r\n}\r\n\r\nexport default PpalLog;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '16rem'\r\n};\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    activeMarker: {},          //Shows the active marker upon click\r\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={18}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n         lat: this.props.lat,\r\n         lng: this.props.lng\r\n        }}\r\n      >\r\n        <Marker\r\n          onClick={this.onMarkerClick}\r\n        />\r\n        </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\r\n})(MapContainer);","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './crearRuta.css';\r\nimport unirse from '../../assets/unirse.png'\r\nimport crear from '../../assets/crear.png'\r\nimport MapContainer from '../Map/MapContainer'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nfunction CrearRuta(props) {\r\n\r\n\r\n  var today = new Date();\r\n  var anho = today.getFullYear();\r\n  var mes = `${today.getMonth() + 1}`.padStart(2, 0);\r\n  var dia = `${today.getDate()}`.padStart(2, 0);\r\n  var horaT = `${today.getHours()}`.padStart(2, 0);\r\n  var minutos = `${today.getMinutes()}`.padStart(2, 0);\r\n\r\n  const [origen, setOrigen] = useState('');\r\n  const [destino, setDestino] = useState('');\r\n  const [hora, setHora] = useState('');\r\n  const [latOrigen, setLatOrigen] = useState(0);\r\n  const [lonOrigen, setLonOrigen] = useState(0);\r\n  const [latDestino, setLatDestino] = useState(0);\r\n  const [lonDestino, setLonDestino] = useState(0);\r\n  const [confirmacion, setConfirmacion] = useState(false);\r\n  const [confirmacion1, setConfirmacion1] = useState(false);\r\n  const [confirmacion2, setConfirmacion2] = useState(false);\r\n  const [fecha, setFecha] = useState('');\r\n  const [seleccionado, setSeleccionado] = useState(false);\r\n  const [cupos, setCupos] = useState(0);\r\n  const [cupoExtra, setCupoExtra] = useState(0);\r\n\r\n\r\n  let history = useHistory();\r\n  const dotenv = require(\"dotenv\");\r\n  dotenv.config();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setSeleccionado(true);\r\n  }\r\n\r\n\r\n  function repetirProceso() {\r\n    alert(\"Vuelve a ingresar los datos para obtener mayor precisión\");\r\n  }\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n\r\n  const style = {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n\r\n\r\n  function enviarRuta1() {\r\n    setConfirmacion1(true);\r\n    console.log(confirmacion1);\r\n    console.log(confirmacion2);\r\n    if (confirmacion1 && confirmacion2) {\r\n      crearServicio();\r\n    }\r\n    else {\r\n      alert(\"Por favor confirme el otro punto\");\r\n    }\r\n  }\r\n\r\n  function enviarRuta2() {\r\n    setConfirmacion2(true);\r\n    console.log(confirmacion1);\r\n    console.log(confirmacion2);\r\n    if (confirmacion1 && confirmacion2) {\r\n      crearServicio();\r\n    }\r\n    else {\r\n      alert(\"Por favor confirme el otro punto\");\r\n    }\r\n  }\r\n\r\n  const crearServicio = () => {\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n      const fechaTotal = fecha + \"T\" + hora + \":00\";\r\n      const fechita = new Date(fechaTotal);\r\n      const timestamp = Math.floor(fechita.getTime() / 1000);\r\n      const bodyService = JSON.stringify({\r\n        \"dueño\": user.uid,\r\n        \"cuposRestantes\": cupos,\r\n        \"usuarios\": [],\r\n        \"ruta\": [],\r\n        \"duracionAprox\":\"\",\r\n        \"instrucciones\":[],\r\n        \"distancia\":\"\",\r\n        \"waypoints\":[],\r\n        \"initial\": {\r\n          \"lat\": latOrigen,\r\n          \"lng\": lonOrigen\r\n        },\r\n        \"destination\": {\r\n          \"lat\": latDestino,\r\n          \"lng\": lonDestino\r\n        },\r\n        \"comenzado\": false,\r\n        \"terminado\": false,\r\n        \"departureTime\": timestamp\r\n      });\r\n      const req = await fetch(`${backUrl}/services/crearServicio`, {\r\n        method: 'POST',\r\n        body: bodyService,\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n      console.log(rta);\r\n      if (rta.msg === 'OK') {\r\n        alert(\"Servicio creado satisfactoriamente!\");\r\n        history.push('ppalLog');\r\n      }\r\n    })();\r\n  }\r\n\r\n\r\n\r\n\r\n  const nueva = () => {\r\n    setConfirmacion(false);\r\n    console.log(origen, destino, hora);\r\n    confirmarServicio();\r\n  }\r\n\r\n\r\n  const confirmarServicio = () => {\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n      const body = JSON.stringify({\r\n        \"direccionInicio\": origen,\r\n        \"direccionFin\": destino\r\n      });\r\n      const req = await fetch(`${backUrl}/services/confirmarMapa`, {\r\n        method: 'POST',\r\n        body: body,\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n      console.log(rta);\r\n\r\n\r\n      const tempO = rta.resultadoInicio.results[0].geometry.location;\r\n      const tempD = rta.resultadoFin.results[0].geometry.location;\r\n\r\n      console.log(tempO, tempD);\r\n      setLatOrigen(tempO.lat);\r\n      setLonOrigen(tempO.lng);\r\n\r\n      setLatDestino(tempD.lat);\r\n      setLonDestino(tempD.lng);\r\n      console.log(\"origen\", latOrigen, lonOrigen);\r\n      console.log(\"destino\", latDestino, lonDestino);\r\n\r\n      setConfirmacion(true);\r\n\r\n      //usa la respuesta\r\n    })();\r\n  }\r\n\r\n\r\n  const unirse = () => {\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n\r\n      const req = await fetch(`${backUrl}/loQueQuieroHacer`, {\r\n        method: 'POST',\r\n        body: {},\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n      //usa la respuesta\r\n    })();\r\n  }\r\n\r\n  return (\r\n    props.cookies.cookies.wheelsToken ?\r\n      <div className=\"App\">\r\n        <div className=\"container heading\">\r\n          <h1>Crea una nueva ruta, {props.allCookies.wheelsUser.uid} </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n            <div className=\"col-sm-8 col-md-8 col-lg-6\">\r\n              <form className=\"form heading\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"origen\">Origen de tu ruta</label>\r\n                  <input required type=\"text\" className=\"form-control\" id=\"origen\" onChange={e => setOrigen(e.target.value)} placeholder=\"Ingresa desde dónde sales\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"destino\">Destino de tu ruta</label>\r\n                  <input required type=\"text\" className=\"form-control\" id=\"destino\" onChange={e => setDestino(e.target.value)} placeholder=\"Ingresa cuál es tu destino\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fecha\">Fecha de salida</label>\r\n                  <input type=\"date\" className=\"from-control\" id=\"fecha\" name=\"trip-start\" min={anho + \"-\" + mes + \"-\" + dia} max=\"2025-12-31\" onChange={e => setFecha(e.target.value)}></input>\r\n                  <label htmlFor=\"hora\">Hora de salida</label>\r\n                  <input type=\"time\" id=\"hora\" name=\"appt\" min={horaT + \":\" + minutos} max=\"23:59\" onChange={e => setHora(e.target.value)} required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"carro\">Elige el carro de esta ruta</label>\r\n                  <select required className=\"form-control\" id=\"carro\" placeholder=\"Elige el carro\" onChange={e => setCupoExtra(e.target.value)}>\r\n                    <option>Elige uno de tus carros</option>\r\n                    {props.carros && props.carros.length > 0 ?\r\n                      props.carros\r\n                        .map((element) => {\r\n                          return <option value={element.cupos}>\r\n                            {element.marca} {element.linea} de placas {element.placas} (Cupo maximo {element.cupos})\r\n                          </option>\r\n                        })\r\n                      :\r\n                      <div></div>\r\n                      // <option disabled>Agrega algún carro</option>\r\n                    }\r\n                  </select>\r\n                </div>\r\n                {/* <input class=\"flatpickr flatpickr-input\" type=\"text\" placeholder=\"Select Date..\" data-id=\"datetime\" readonly=\"readonly\"/> */}\r\n                <button onClick={nueva} className=\"btn yellow-black\">Continuar Proceso</button>\r\n                {seleccionado ? <div><input required type=\"number\" min=\"1\" max={\"\" + cupoExtra} className=\"form-control\" id=\"cupos\" onChange={e => setCupos(e.target.value)} placeholder=\"Ingresa cantidad de cupos disponibles\" /> <button type=\"submit\" className=\"btn yellow-black\">Crear ruta</button></div> : <div></div>}\r\n              </form>\r\n              {confirmacion ?\r\n                <div className=\"row maps heading\">\r\n                  <div className=\"col-6 origen\">\r\n                    ¿Es correcto el <i>origen</i>?\r\n                    <br />\r\n                    <button onClick={enviarRuta1} className=\"btn yellow\">Sí</button>\r\n                    <button onClick={repetirProceso} className=\"btn yellow\">No</button>\r\n\r\n                    <MapContainer\r\n                      lat={latOrigen}\r\n                      lng={lonOrigen}\r\n                    ></MapContainer>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"col-6 destino\">\r\n                    ¿Es correcto el <i>destino</i>?\r\n                    <br />\r\n                    <button onClick={enviarRuta2} className=\"btn yellow\">Sí</button>\r\n                    <button onClick={repetirProceso} className=\"btn yellow\">No</button>\r\n                    <MapContainer\r\n                      lat={latDestino}\r\n                      lng={lonDestino}\r\n                    ></MapContainer>\r\n                  </div>\r\n\r\n                </div>\r\n                :\r\n                <div></div>}\r\n            </div>\r\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n          </div>        </div>\r\n      </div>\r\n      :\r\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br /> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\r\n  );\r\n}\r\n\r\nexport default CrearRuta;\r\n\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './MisCarros.css';\r\nimport unirse from '../../assets/unirse.png';\r\nimport crear from '../../assets/crear.png';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AñadirCarro(props) {\r\n\r\n  let history = useHistory();\r\n  const [marca, setMarca] = useState('');\r\n  const [linea, setLinea] = useState('');\r\n  const [placas, setPlacas] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [cupos, setCupos] = useState(0);\r\n\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n  const actualUser = JSON.parse(props.cookies.cookies.wheelsUser).uid;\r\n  const body = {\r\n    \"uid\":actualUser,\r\n    \"carro\": {\"marca\": marca,\r\n      \"linea\": linea,\r\n      \"placas\": placas,\r\n      \"color\": color,\r\n      \"cupos\": cupos\r\n    }\r\n  };\r\n\r\n\r\n  const crearCarro = ()=>{\r\n    (async () => {\r\n      const user = props.cookies.get('wheelsUser');\r\n      const req = await fetch(`${backUrl}/cars/agregarcarro`, {\r\n        method:'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n          'Authorization': `Bearer ${props.cookies.get('wheelsToken')}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const rta = await req.json();\r\n\r\n      //usa la respuesta\r\n    })();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    crearCarro();\r\n  }\r\n\r\n  return (\r\n    props.cookies.cookies.wheelsToken ?\r\n    <form className=\"form \" onSubmit={handleSubmit}>\r\n      <h1>Añadir nuevo carro </h1>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"marca\">Marca de tu carro</label>\r\n        <input required type=\"text\" className=\"form-control\" id=\"marca\" onChange={e => setMarca(e.target.value)} placeholder=\"Ingresa la marca Ej. Mazda\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"linea\">Linea de tu carro</label>\r\n        <input required type=\"text\" className=\"form-control\" id=\"linea\" onChange={e => setLinea(e.target.value)} placeholder=\"Ingresa la línea Ej. 3 Touring\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"placas\">Placas de tu carro</label>\r\n        <input required type=\"text\" pattern=\"[A-Z]{3}[-][0-9]{3}\" className=\"form-control\" id=\"placas\" onChange={e => setPlacas(e.target.value)} placeholder=\"Ingresa las placas Ej. AAA-123\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"color\">Color de tu carro</label>\r\n        <input required type=\"text\" className=\"form-control\" id=\"color\" onChange={e => setColor(e.target.value)} placeholder=\"Ingresa el color\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"cupos\">Cupos</label>\r\n        <input required type=\"number\" min=\"2\" max=\"9\" className=\"form-control\" id=\"cupos\" onChange={e => setCupos(e.target.value)} placeholder=\"Ingresa cantidad de pasajeros\" />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn yellow-black\">Agregar carro</button>\r\n    </form>\r\n    :\r\n    <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\r\n  );\r\n}\r\n\r\nexport default AñadirCarro;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './MisCarros.css';\r\nimport unirse from '../../assets/unirse.png';\r\nimport crear from '../../assets/crear.png';\r\nimport AñadirCarro from './AñadirCarro';\r\n\r\nfunction MisCarros(props) {\r\n\r\n  const [agregar, setAgregar] = useState(false);\r\n\r\n  function agregarCarro() {\r\n    setAgregar(true);\r\n  }\r\n\r\n\r\n  console.log(props.carros);\r\n  return (\r\n    props.cookies.cookies.wheelsToken ?\r\n    <div className=\"App\">\r\n      <div className=\"container heading\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-5 col-lg-5\">\r\n            <h1>Tus carros, {props.allCookies.wheelsUser.uid} </h1>\r\n            {props.carros.length > 0 ?\r\n              props.carros\r\n                .map((element) => {\r\n                  return <p key={element.placas}>\r\n                    {element.marca} {element.linea} de placas <strong>{element.placas}</strong>\r\n                  </p>\r\n                })\r\n              :\r\n              <p>Aún no tienes carros :(</p>}\r\n          </div>\r\n          <div className=\" col-md-2 col-lg-2\"></div>\r\n          <div className=\"col-sm-12 col-md-5 col-lg-5 \">\r\n            {agregar ?\r\n              <AñadirCarro {...props} />\r\n              :\r\n              <div className=\"App\">\r\n                <div>\r\n                  <button onClick={agregarCarro} className=\"btn yellow-black\">Agregar carro</button>\r\n                </div>\r\n                <div className=\"App\">\r\n                  <img className=\"wheels-2\" src={unirse}></img>\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    :\r\n    <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\r\n  );\r\n}\r\n\r\nexport default MisCarros;","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './RutasDisponibles.css';\r\nimport unirse from '../../assets/unirse.png'\r\nimport crear from '../../assets/crear.png'\r\n\r\nfunction RutasDisponibles(props) {\r\n\r\n\r\n  return (\r\n    props.cookies.cookies.wheelsToken ?\r\n      <div className=\"App\">\r\n        <div className=\"container heading\">\r\n          <h1>Rutas disponibles para tí, {props.allCookies.wheelsUser.uid} </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n            <div className=\"col-sm-8 col-md-8 col-lg-6 heading\">\r\n              <p>Ruta #1</p>\r\n              <p>Ruta #2</p>\r\n              <p>Ruta #3</p>\r\n              <p>Ruta #4</p>\r\n            </div>\r\n            <div className=\"col-sm-2 col-md-2 col-lg-3\"></div>\r\n          </div>        </div>\r\n      </div>\r\n      :\r\n      <div className=\"App heading\"><h2>Redirígete a <a href=\"/\"> la página principal</a>. <br/> Debes iniciar sesión para usar el contenido de Wheels Uniandes</h2></div>\r\n  );\r\n}\r\n\r\nexport default RutasDisponibles;\r\n\r\n","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Home from './Home'\r\nimport Login from './components/Login/Login';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Register from './components/Register/Register';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport PpalLog from \"./components/PpalLog/PpalLog\";\r\nimport CrearRuta from \"./components/crearRuta/CrearRuta\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport MisCarros from \"./components/MisCarros/MisCarros\";\r\nimport RutasDisponibles from \"./components/RutasDisponibles/RutasDisponibles\";\r\n// 0: Home\r\n// 1: InicioSesion\r\n// 2: Register\r\n// 3: PpalLog\r\n\r\n\r\nfunction App(props) {\r\n  const [wsConnection, setConnection] = useState(null);\r\n  const [carros, setCarros] = useState([]);\r\n  const [servicios, setServicios] = useState([]);\r\n\r\n  const backUrl = \"https://wheelsuniandes.herokuapp.com\";\r\n  const wsUrl = \"wss://wheelsuniandes.herokuapp.com\";\r\n\r\n  const funcionCookie = (cookie, user) => {\r\n    props.cookies.set('wheelsToken', cookie, { path: '/' });\r\n    props.cookies.set('wheelsUser', { \"uid\": user });\r\n\r\n  }\r\n\r\n  const signout = (e) => {\r\n    e.preventDefault();\r\n    props.cookies.set('wheelsUser', '');\r\n    props.cookies.set('wheelsToken', '');\r\n  }\r\n\r\n  const consultarCarros = (user, token) => {\r\n    console.log(\"Hola\", user);\r\n    (async () => {\r\n      const req = await fetch(`${backUrl}/cars/${user.uid}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'user': JSON.stringify(user),\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      console.log(\"Request Carros\", req);\r\n      const rta = await req.text();\r\n      console.log(rta);\r\n      setCarros(rta);\r\n    })();\r\n  };\r\n\r\n  const wsConn = () => {\r\n    const temp = JSON.parse(props.cookies.cookies.wheelsUser);\r\n    const connection = new WebSocket(wsUrl);\r\n\r\n    connection.onopen = () => {\r\n      connection.send(temp.uid);\r\n    }\r\n\r\n    connection.onmessage = (msg)=>{\r\n      if (msg.data.includes(\"cars#\")) {\r\n        const data = msg.data.split(\"#\")[1];\r\n        const jsonData = JSON.parse(data);\r\n        setCarros(jsonData);\r\n      }\r\n      else if(msg.data.includes(\"services#\")) {\r\n        const data = msg.data.split(\"#\")[1];\r\n        const jsonData = JSON.parse(data);\r\n        console.log(jsonData);\r\n        setServicios(jsonData);\r\n      }\r\n      else{\r\n        //TODO\r\n      }\r\n    };\r\n\r\n    connection.onclose = () => {\r\n      console.log(\"se fue papá\");\r\n    };\r\n\r\n    setConnection(connection);\r\n    const userId = JSON.parse(props.cookies.cookies.wheelsUser);\r\n    const token =props.cookies.cookies.wheelsToken;\r\n    consultarCarros(userId, token);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n\r\n      <Route path=\"/\" render={() => <NavBar {...props} signout={signout} wsConnection={wsConnection} />} />\r\n      <Route path=\"/\" component={Home} exact />\r\n      <Route path=\"/register\" render={() => <Register {...props} funcionCookie={funcionCookie} signout={signout} wsConn ={wsConn} />}  />\r\n      <Route path=\"/login\" render={() => <Login {...props} funcionCookie={funcionCookie} signout={signout} wsConn ={wsConn} />} />\r\n      <Route path='/ppalLog' render={() => <PpalLog {...props} />}/>\r\n      <Route path='/crearRuta' render={() => <CrearRuta {...props} carros={carros} />} />\r\n      <Route path='/misCarros' render={() => <MisCarros {...props} carros={carros}  />} />\r\n      <Route path='/rutasDisponibles' render={() => <RutasDisponibles {...props} carros={carros}  />} />\r\n\r\n\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost htmlFor IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs htmlFor this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached htmlFor offline use.\" message.\r\n              console.log('Content is cached htmlFor offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}